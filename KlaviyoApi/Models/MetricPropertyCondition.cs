// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace Klaviyo.Models
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    #pragma warning disable CS1591
    public partial class MetricPropertyCondition : IAdditionalDataHolder, IParsable
    #pragma warning restore CS1591
    {
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>The field property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Field { get; set; }
#nullable restore
#else
        public string Field { get; set; }
#endif
        /// <summary>The filter property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Klaviyo.Models.MetricPropertyCondition.MetricPropertyCondition_filter? Filter { get; set; }
#nullable restore
#else
        public global::Klaviyo.Models.MetricPropertyCondition.MetricPropertyCondition_filter Filter { get; set; }
#endif
        /// <summary>The metric_id property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? MetricId { get; set; }
#nullable restore
#else
        public string MetricId { get; set; }
#endif
        /// <summary>The type property</summary>
        public global::Klaviyo.Models.MetricPropertyEnum? Type { get; set; }
        /// <summary>
        /// Instantiates a new <see cref="global::Klaviyo.Models.MetricPropertyCondition"/> and sets the default values.
        /// </summary>
        public MetricPropertyCondition()
        {
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::Klaviyo.Models.MetricPropertyCondition"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::Klaviyo.Models.MetricPropertyCondition CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::Klaviyo.Models.MetricPropertyCondition();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "field", n => { Field = n.GetStringValue(); } },
                { "filter", n => { Filter = n.GetObjectValue<global::Klaviyo.Models.MetricPropertyCondition.MetricPropertyCondition_filter>(global::Klaviyo.Models.MetricPropertyCondition.MetricPropertyCondition_filter.CreateFromDiscriminatorValue); } },
                { "metric_id", n => { MetricId = n.GetStringValue(); } },
                { "type", n => { Type = n.GetEnumValue<global::Klaviyo.Models.MetricPropertyEnum>(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteStringValue("field", Field);
            writer.WriteObjectValue<global::Klaviyo.Models.MetricPropertyCondition.MetricPropertyCondition_filter>("filter", Filter);
            writer.WriteStringValue("metric_id", MetricId);
            writer.WriteEnumValue<global::Klaviyo.Models.MetricPropertyEnum>("type", Type);
            writer.WriteAdditionalData(AdditionalData);
        }
        /// <summary>
        /// Composed type wrapper for classes <see cref="global::Klaviyo.Models.AnniversaryDateFilter"/>, <see cref="global::Klaviyo.Models.BooleanFilter"/>, <see cref="global::Klaviyo.Models.CalendarDateFilter"/>, <see cref="global::Klaviyo.Models.ExistenceOperatorFilter"/>, <see cref="global::Klaviyo.Models.ListContainsOperatorFilter"/>, <see cref="global::Klaviyo.Models.ListLengthFilter"/>, <see cref="global::Klaviyo.Models.NumericOperatorFilter"/>, <see cref="global::Klaviyo.Models.NumericRangeFilter"/>, <see cref="global::Klaviyo.Models.RelativeAnniversaryDateFilter"/>, <see cref="global::Klaviyo.Models.RelativeDateOperatorBaseFilter"/>, <see cref="global::Klaviyo.Models.RelativeDateRangeFilter"/>, <see cref="global::Klaviyo.Models.StaticDateFilter"/>, <see cref="global::Klaviyo.Models.StaticDateRangeFilter"/>, <see cref="global::Klaviyo.Models.StringArrayOperatorFilter"/>, <see cref="global::Klaviyo.Models.StringOperatorFilter"/>
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
        public partial class MetricPropertyCondition_filter : IComposedTypeWrapper, IParsable
        {
            /// <summary>Composed type representation for type <see cref="global::Klaviyo.Models.AnniversaryDateFilter"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            public global::Klaviyo.Models.AnniversaryDateFilter? AnniversaryDateFilter { get; set; }
#nullable restore
#else
            public global::Klaviyo.Models.AnniversaryDateFilter AnniversaryDateFilter { get; set; }
#endif
            /// <summary>Composed type representation for type <see cref="global::Klaviyo.Models.BooleanFilter"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            public global::Klaviyo.Models.BooleanFilter? BooleanFilter { get; set; }
#nullable restore
#else
            public global::Klaviyo.Models.BooleanFilter BooleanFilter { get; set; }
#endif
            /// <summary>Composed type representation for type <see cref="global::Klaviyo.Models.CalendarDateFilter"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            public global::Klaviyo.Models.CalendarDateFilter? CalendarDateFilter { get; set; }
#nullable restore
#else
            public global::Klaviyo.Models.CalendarDateFilter CalendarDateFilter { get; set; }
#endif
            /// <summary>Composed type representation for type <see cref="global::Klaviyo.Models.ExistenceOperatorFilter"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            public global::Klaviyo.Models.ExistenceOperatorFilter? ExistenceOperatorFilter { get; set; }
#nullable restore
#else
            public global::Klaviyo.Models.ExistenceOperatorFilter ExistenceOperatorFilter { get; set; }
#endif
            /// <summary>Composed type representation for type <see cref="global::Klaviyo.Models.ListContainsOperatorFilter"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            public global::Klaviyo.Models.ListContainsOperatorFilter? ListContainsOperatorFilter { get; set; }
#nullable restore
#else
            public global::Klaviyo.Models.ListContainsOperatorFilter ListContainsOperatorFilter { get; set; }
#endif
            /// <summary>Composed type representation for type <see cref="global::Klaviyo.Models.ListLengthFilter"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            public global::Klaviyo.Models.ListLengthFilter? ListLengthFilter { get; set; }
#nullable restore
#else
            public global::Klaviyo.Models.ListLengthFilter ListLengthFilter { get; set; }
#endif
            /// <summary>Composed type representation for type <see cref="global::Klaviyo.Models.NumericOperatorFilter"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            public global::Klaviyo.Models.NumericOperatorFilter? NumericOperatorFilter { get; set; }
#nullable restore
#else
            public global::Klaviyo.Models.NumericOperatorFilter NumericOperatorFilter { get; set; }
#endif
            /// <summary>Composed type representation for type <see cref="global::Klaviyo.Models.NumericRangeFilter"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            public global::Klaviyo.Models.NumericRangeFilter? NumericRangeFilter { get; set; }
#nullable restore
#else
            public global::Klaviyo.Models.NumericRangeFilter NumericRangeFilter { get; set; }
#endif
            /// <summary>Composed type representation for type <see cref="global::Klaviyo.Models.RelativeAnniversaryDateFilter"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            public global::Klaviyo.Models.RelativeAnniversaryDateFilter? RelativeAnniversaryDateFilter { get; set; }
#nullable restore
#else
            public global::Klaviyo.Models.RelativeAnniversaryDateFilter RelativeAnniversaryDateFilter { get; set; }
#endif
            /// <summary>Composed type representation for type <see cref="global::Klaviyo.Models.RelativeDateOperatorBaseFilter"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            public global::Klaviyo.Models.RelativeDateOperatorBaseFilter? RelativeDateOperatorBaseFilter { get; set; }
#nullable restore
#else
            public global::Klaviyo.Models.RelativeDateOperatorBaseFilter RelativeDateOperatorBaseFilter { get; set; }
#endif
            /// <summary>Composed type representation for type <see cref="global::Klaviyo.Models.RelativeDateRangeFilter"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            public global::Klaviyo.Models.RelativeDateRangeFilter? RelativeDateRangeFilter { get; set; }
#nullable restore
#else
            public global::Klaviyo.Models.RelativeDateRangeFilter RelativeDateRangeFilter { get; set; }
#endif
            /// <summary>Composed type representation for type <see cref="global::Klaviyo.Models.StaticDateFilter"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            public global::Klaviyo.Models.StaticDateFilter? StaticDateFilter { get; set; }
#nullable restore
#else
            public global::Klaviyo.Models.StaticDateFilter StaticDateFilter { get; set; }
#endif
            /// <summary>Composed type representation for type <see cref="global::Klaviyo.Models.StaticDateRangeFilter"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            public global::Klaviyo.Models.StaticDateRangeFilter? StaticDateRangeFilter { get; set; }
#nullable restore
#else
            public global::Klaviyo.Models.StaticDateRangeFilter StaticDateRangeFilter { get; set; }
#endif
            /// <summary>Composed type representation for type <see cref="global::Klaviyo.Models.StringArrayOperatorFilter"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            public global::Klaviyo.Models.StringArrayOperatorFilter? StringArrayOperatorFilter { get; set; }
#nullable restore
#else
            public global::Klaviyo.Models.StringArrayOperatorFilter StringArrayOperatorFilter { get; set; }
#endif
            /// <summary>Composed type representation for type <see cref="global::Klaviyo.Models.StringOperatorFilter"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            public global::Klaviyo.Models.StringOperatorFilter? StringOperatorFilter { get; set; }
#nullable restore
#else
            public global::Klaviyo.Models.StringOperatorFilter StringOperatorFilter { get; set; }
#endif
            /// <summary>
            /// Creates a new instance of the appropriate class based on discriminator value
            /// </summary>
            /// <returns>A <see cref="global::Klaviyo.Models.MetricPropertyCondition.MetricPropertyCondition_filter"/></returns>
            /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
            public static global::Klaviyo.Models.MetricPropertyCondition.MetricPropertyCondition_filter CreateFromDiscriminatorValue(IParseNode parseNode)
            {
                _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
                var mappingValue = parseNode.GetChildNode("")?.GetStringValue();
                var result = new global::Klaviyo.Models.MetricPropertyCondition.MetricPropertyCondition_filter();
                if("AnniversaryDateFilter".Equals(mappingValue, StringComparison.OrdinalIgnoreCase))
                {
                    result.AnniversaryDateFilter = new global::Klaviyo.Models.AnniversaryDateFilter();
                }
                else if("BooleanFilter".Equals(mappingValue, StringComparison.OrdinalIgnoreCase))
                {
                    result.BooleanFilter = new global::Klaviyo.Models.BooleanFilter();
                }
                else if("CalendarDateFilter".Equals(mappingValue, StringComparison.OrdinalIgnoreCase))
                {
                    result.CalendarDateFilter = new global::Klaviyo.Models.CalendarDateFilter();
                }
                else if("ExistenceOperatorFilter".Equals(mappingValue, StringComparison.OrdinalIgnoreCase))
                {
                    result.ExistenceOperatorFilter = new global::Klaviyo.Models.ExistenceOperatorFilter();
                }
                else if("ListContainsOperatorFilter".Equals(mappingValue, StringComparison.OrdinalIgnoreCase))
                {
                    result.ListContainsOperatorFilter = new global::Klaviyo.Models.ListContainsOperatorFilter();
                }
                else if("ListLengthFilter".Equals(mappingValue, StringComparison.OrdinalIgnoreCase))
                {
                    result.ListLengthFilter = new global::Klaviyo.Models.ListLengthFilter();
                }
                else if("NumericOperatorFilter".Equals(mappingValue, StringComparison.OrdinalIgnoreCase))
                {
                    result.NumericOperatorFilter = new global::Klaviyo.Models.NumericOperatorFilter();
                }
                else if("NumericRangeFilter".Equals(mappingValue, StringComparison.OrdinalIgnoreCase))
                {
                    result.NumericRangeFilter = new global::Klaviyo.Models.NumericRangeFilter();
                }
                else if("RelativeAnniversaryDateFilter".Equals(mappingValue, StringComparison.OrdinalIgnoreCase))
                {
                    result.RelativeAnniversaryDateFilter = new global::Klaviyo.Models.RelativeAnniversaryDateFilter();
                }
                else if("RelativeDateOperatorBaseFilter".Equals(mappingValue, StringComparison.OrdinalIgnoreCase))
                {
                    result.RelativeDateOperatorBaseFilter = new global::Klaviyo.Models.RelativeDateOperatorBaseFilter();
                }
                else if("RelativeDateRangeFilter".Equals(mappingValue, StringComparison.OrdinalIgnoreCase))
                {
                    result.RelativeDateRangeFilter = new global::Klaviyo.Models.RelativeDateRangeFilter();
                }
                else if("StaticDateFilter".Equals(mappingValue, StringComparison.OrdinalIgnoreCase))
                {
                    result.StaticDateFilter = new global::Klaviyo.Models.StaticDateFilter();
                }
                else if("StaticDateRangeFilter".Equals(mappingValue, StringComparison.OrdinalIgnoreCase))
                {
                    result.StaticDateRangeFilter = new global::Klaviyo.Models.StaticDateRangeFilter();
                }
                else if("StringArrayOperatorFilter".Equals(mappingValue, StringComparison.OrdinalIgnoreCase))
                {
                    result.StringArrayOperatorFilter = new global::Klaviyo.Models.StringArrayOperatorFilter();
                }
                else if("StringOperatorFilter".Equals(mappingValue, StringComparison.OrdinalIgnoreCase))
                {
                    result.StringOperatorFilter = new global::Klaviyo.Models.StringOperatorFilter();
                }
                return result;
            }
            /// <summary>
            /// The deserialization information for the current model
            /// </summary>
            /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
            public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
            {
                if(AnniversaryDateFilter != null)
                {
                    return AnniversaryDateFilter.GetFieldDeserializers();
                }
                else if(BooleanFilter != null)
                {
                    return BooleanFilter.GetFieldDeserializers();
                }
                else if(CalendarDateFilter != null)
                {
                    return CalendarDateFilter.GetFieldDeserializers();
                }
                else if(ExistenceOperatorFilter != null)
                {
                    return ExistenceOperatorFilter.GetFieldDeserializers();
                }
                else if(ListContainsOperatorFilter != null)
                {
                    return ListContainsOperatorFilter.GetFieldDeserializers();
                }
                else if(ListLengthFilter != null)
                {
                    return ListLengthFilter.GetFieldDeserializers();
                }
                else if(NumericOperatorFilter != null)
                {
                    return NumericOperatorFilter.GetFieldDeserializers();
                }
                else if(NumericRangeFilter != null)
                {
                    return NumericRangeFilter.GetFieldDeserializers();
                }
                else if(RelativeAnniversaryDateFilter != null)
                {
                    return RelativeAnniversaryDateFilter.GetFieldDeserializers();
                }
                else if(RelativeDateOperatorBaseFilter != null)
                {
                    return RelativeDateOperatorBaseFilter.GetFieldDeserializers();
                }
                else if(RelativeDateRangeFilter != null)
                {
                    return RelativeDateRangeFilter.GetFieldDeserializers();
                }
                else if(StaticDateFilter != null)
                {
                    return StaticDateFilter.GetFieldDeserializers();
                }
                else if(StaticDateRangeFilter != null)
                {
                    return StaticDateRangeFilter.GetFieldDeserializers();
                }
                else if(StringArrayOperatorFilter != null)
                {
                    return StringArrayOperatorFilter.GetFieldDeserializers();
                }
                else if(StringOperatorFilter != null)
                {
                    return StringOperatorFilter.GetFieldDeserializers();
                }
                return new Dictionary<string, Action<IParseNode>>();
            }
            /// <summary>
            /// Serializes information the current object
            /// </summary>
            /// <param name="writer">Serialization writer to use to serialize this model</param>
            public virtual void Serialize(ISerializationWriter writer)
            {
                _ = writer ?? throw new ArgumentNullException(nameof(writer));
                if(AnniversaryDateFilter != null)
                {
                    writer.WriteObjectValue<global::Klaviyo.Models.AnniversaryDateFilter>(null, AnniversaryDateFilter);
                }
                else if(BooleanFilter != null)
                {
                    writer.WriteObjectValue<global::Klaviyo.Models.BooleanFilter>(null, BooleanFilter);
                }
                else if(CalendarDateFilter != null)
                {
                    writer.WriteObjectValue<global::Klaviyo.Models.CalendarDateFilter>(null, CalendarDateFilter);
                }
                else if(ExistenceOperatorFilter != null)
                {
                    writer.WriteObjectValue<global::Klaviyo.Models.ExistenceOperatorFilter>(null, ExistenceOperatorFilter);
                }
                else if(ListContainsOperatorFilter != null)
                {
                    writer.WriteObjectValue<global::Klaviyo.Models.ListContainsOperatorFilter>(null, ListContainsOperatorFilter);
                }
                else if(ListLengthFilter != null)
                {
                    writer.WriteObjectValue<global::Klaviyo.Models.ListLengthFilter>(null, ListLengthFilter);
                }
                else if(NumericOperatorFilter != null)
                {
                    writer.WriteObjectValue<global::Klaviyo.Models.NumericOperatorFilter>(null, NumericOperatorFilter);
                }
                else if(NumericRangeFilter != null)
                {
                    writer.WriteObjectValue<global::Klaviyo.Models.NumericRangeFilter>(null, NumericRangeFilter);
                }
                else if(RelativeAnniversaryDateFilter != null)
                {
                    writer.WriteObjectValue<global::Klaviyo.Models.RelativeAnniversaryDateFilter>(null, RelativeAnniversaryDateFilter);
                }
                else if(RelativeDateOperatorBaseFilter != null)
                {
                    writer.WriteObjectValue<global::Klaviyo.Models.RelativeDateOperatorBaseFilter>(null, RelativeDateOperatorBaseFilter);
                }
                else if(RelativeDateRangeFilter != null)
                {
                    writer.WriteObjectValue<global::Klaviyo.Models.RelativeDateRangeFilter>(null, RelativeDateRangeFilter);
                }
                else if(StaticDateFilter != null)
                {
                    writer.WriteObjectValue<global::Klaviyo.Models.StaticDateFilter>(null, StaticDateFilter);
                }
                else if(StaticDateRangeFilter != null)
                {
                    writer.WriteObjectValue<global::Klaviyo.Models.StaticDateRangeFilter>(null, StaticDateRangeFilter);
                }
                else if(StringArrayOperatorFilter != null)
                {
                    writer.WriteObjectValue<global::Klaviyo.Models.StringArrayOperatorFilter>(null, StringArrayOperatorFilter);
                }
                else if(StringOperatorFilter != null)
                {
                    writer.WriteObjectValue<global::Klaviyo.Models.StringOperatorFilter>(null, StringOperatorFilter);
                }
            }
        }
    }
}
#pragma warning restore CS0618
