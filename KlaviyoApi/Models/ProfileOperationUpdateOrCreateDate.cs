// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
using Microsoft.Kiota.Abstractions;
namespace Klaviyo.Models
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    #pragma warning disable CS1591
    public partial class ProfileOperationUpdateOrCreateDate : IAdditionalDataHolder, IParsable
    #pragma warning restore CS1591
    {
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>The type of operation to perform on a profile property.</summary>
        public global::Klaviyo.Models.ProfileOperationUpdateOrCreateDate_operator? Operator { get; set; }
        /// <summary>The property_key property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? PropertyKey { get; set; }
#nullable restore
#else
        public string PropertyKey { get; set; }
#endif
        /// <summary>The property_type property</summary>
        public global::Klaviyo.Models.DateEnum? PropertyType { get; set; }
        /// <summary>The property_value property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Klaviyo.Models.ProfileOperationUpdateOrCreateDate.ProfileOperationUpdateOrCreateDate_property_value? PropertyValue { get; set; }
#nullable restore
#else
        public global::Klaviyo.Models.ProfileOperationUpdateOrCreateDate.ProfileOperationUpdateOrCreateDate_property_value PropertyValue { get; set; }
#endif
        /// <summary>
        /// Instantiates a new <see cref="global::Klaviyo.Models.ProfileOperationUpdateOrCreateDate"/> and sets the default values.
        /// </summary>
        public ProfileOperationUpdateOrCreateDate()
        {
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::Klaviyo.Models.ProfileOperationUpdateOrCreateDate"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::Klaviyo.Models.ProfileOperationUpdateOrCreateDate CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::Klaviyo.Models.ProfileOperationUpdateOrCreateDate();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "operator", n => { Operator = n.GetEnumValue<global::Klaviyo.Models.ProfileOperationUpdateOrCreateDate_operator>(); } },
                { "property_key", n => { PropertyKey = n.GetStringValue(); } },
                { "property_type", n => { PropertyType = n.GetEnumValue<global::Klaviyo.Models.DateEnum>(); } },
                { "property_value", n => { PropertyValue = n.GetObjectValue<global::Klaviyo.Models.ProfileOperationUpdateOrCreateDate.ProfileOperationUpdateOrCreateDate_property_value>(global::Klaviyo.Models.ProfileOperationUpdateOrCreateDate.ProfileOperationUpdateOrCreateDate_property_value.CreateFromDiscriminatorValue); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteEnumValue<global::Klaviyo.Models.ProfileOperationUpdateOrCreateDate_operator>("operator", Operator);
            writer.WriteStringValue("property_key", PropertyKey);
            writer.WriteEnumValue<global::Klaviyo.Models.DateEnum>("property_type", PropertyType);
            writer.WriteObjectValue<global::Klaviyo.Models.ProfileOperationUpdateOrCreateDate.ProfileOperationUpdateOrCreateDate_property_value>("property_value", PropertyValue);
            writer.WriteAdditionalData(AdditionalData);
        }
        /// <summary>
        /// Composed type wrapper for classes <see cref="Date"/>, <see cref="global::Klaviyo.Models.ProfileOperationUpdateOrCreateDate_property_valueMember1"/>
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
        public partial class ProfileOperationUpdateOrCreateDate_property_value : IComposedTypeWrapper, IParsable
        {
            /// <summary>Composed type representation for type <see cref="Date"/></summary>
            public Date? DateOnly { get; set; }
            /// <summary>Composed type representation for type <see cref="global::Klaviyo.Models.ProfileOperationUpdateOrCreateDate_property_valueMember1"/></summary>
            public global::Klaviyo.Models.ProfileOperationUpdateOrCreateDate_property_valueMember1? ProfileOperationUpdateOrCreateDatePropertyValueMember1 { get; set; }
            /// <summary>
            /// Creates a new instance of the appropriate class based on discriminator value
            /// </summary>
            /// <returns>A <see cref="global::Klaviyo.Models.ProfileOperationUpdateOrCreateDate.ProfileOperationUpdateOrCreateDate_property_value"/></returns>
            /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
            public static global::Klaviyo.Models.ProfileOperationUpdateOrCreateDate.ProfileOperationUpdateOrCreateDate_property_value CreateFromDiscriminatorValue(IParseNode parseNode)
            {
                _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
                var mappingValue = parseNode.GetChildNode("")?.GetStringValue();
                var result = new global::Klaviyo.Models.ProfileOperationUpdateOrCreateDate.ProfileOperationUpdateOrCreateDate_property_value();
                if(parseNode.GetEnumValue<global::Klaviyo.Models.ProfileOperationUpdateOrCreateDate_property_valueMember1>() is global::Klaviyo.Models.ProfileOperationUpdateOrCreateDate_property_valueMember1 profileOperationUpdateOrCreateDatePropertyValueMember1Value)
                {
                    result.ProfileOperationUpdateOrCreateDatePropertyValueMember1 = profileOperationUpdateOrCreateDatePropertyValueMember1Value;
                }
                else if(parseNode.GetDateValue() is Date dateOnlyValue)
                {
                    result.DateOnly = dateOnlyValue;
                }
                return result;
            }
            /// <summary>
            /// The deserialization information for the current model
            /// </summary>
            /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
            public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
            {
                return new Dictionary<string, Action<IParseNode>>();
            }
            /// <summary>
            /// Serializes information the current object
            /// </summary>
            /// <param name="writer">Serialization writer to use to serialize this model</param>
            public virtual void Serialize(ISerializationWriter writer)
            {
                _ = writer ?? throw new ArgumentNullException(nameof(writer));
                if(ProfileOperationUpdateOrCreateDatePropertyValueMember1 != null)
                {
                    writer.WriteEnumValue<global::Klaviyo.Models.ProfileOperationUpdateOrCreateDate_property_valueMember1>(null, ProfileOperationUpdateOrCreateDatePropertyValueMember1);
                }
                else if(DateOnly != null)
                {
                    writer.WriteDateValue(null, DateOnly);
                }
            }
        }
    }
}
#pragma warning restore CS0618
