// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace Klaviyo.Models
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    #pragma warning disable CS1591
    public partial class TriggerBranchActionData_trigger_filter_condition_groups : IAdditionalDataHolder, IParsable
    #pragma warning restore CS1591
    {
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>The conditions property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::Klaviyo.Models.TriggerBranchActionData_trigger_filter_condition_groups.TriggerBranchActionData_trigger_filter_condition_groups_conditions>? Conditions { get; set; }
#nullable restore
#else
        public List<global::Klaviyo.Models.TriggerBranchActionData_trigger_filter_condition_groups.TriggerBranchActionData_trigger_filter_condition_groups_conditions> Conditions { get; set; }
#endif
        /// <summary>
        /// Instantiates a new <see cref="global::Klaviyo.Models.TriggerBranchActionData_trigger_filter_condition_groups"/> and sets the default values.
        /// </summary>
        public TriggerBranchActionData_trigger_filter_condition_groups()
        {
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::Klaviyo.Models.TriggerBranchActionData_trigger_filter_condition_groups"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::Klaviyo.Models.TriggerBranchActionData_trigger_filter_condition_groups CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::Klaviyo.Models.TriggerBranchActionData_trigger_filter_condition_groups();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "conditions", n => { Conditions = n.GetCollectionOfObjectValues<global::Klaviyo.Models.TriggerBranchActionData_trigger_filter_condition_groups.TriggerBranchActionData_trigger_filter_condition_groups_conditions>(global::Klaviyo.Models.TriggerBranchActionData_trigger_filter_condition_groups.TriggerBranchActionData_trigger_filter_condition_groups_conditions.CreateFromDiscriminatorValue)?.AsList(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteCollectionOfObjectValues<global::Klaviyo.Models.TriggerBranchActionData_trigger_filter_condition_groups.TriggerBranchActionData_trigger_filter_condition_groups_conditions>("conditions", Conditions);
            writer.WriteAdditionalData(AdditionalData);
        }
        /// <summary>
        /// Composed type wrapper for classes <see cref="global::Klaviyo.Models.CustomObjectPropertyCondition"/>, <see cref="global::Klaviyo.Models.LowInventoryCondition"/>, <see cref="global::Klaviyo.Models.MetricPropertyCondition"/>, <see cref="global::Klaviyo.Models.PriceDropCondition"/>
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
        public partial class TriggerBranchActionData_trigger_filter_condition_groups_conditions : IComposedTypeWrapper, IParsable
        {
            /// <summary>Composed type representation for type <see cref="global::Klaviyo.Models.CustomObjectPropertyCondition"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            public global::Klaviyo.Models.CustomObjectPropertyCondition? CustomObjectPropertyCondition { get; set; }
#nullable restore
#else
            public global::Klaviyo.Models.CustomObjectPropertyCondition CustomObjectPropertyCondition { get; set; }
#endif
            /// <summary>Composed type representation for type <see cref="global::Klaviyo.Models.LowInventoryCondition"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            public global::Klaviyo.Models.LowInventoryCondition? LowInventoryCondition { get; set; }
#nullable restore
#else
            public global::Klaviyo.Models.LowInventoryCondition LowInventoryCondition { get; set; }
#endif
            /// <summary>Composed type representation for type <see cref="global::Klaviyo.Models.MetricPropertyCondition"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            public global::Klaviyo.Models.MetricPropertyCondition? MetricPropertyCondition { get; set; }
#nullable restore
#else
            public global::Klaviyo.Models.MetricPropertyCondition MetricPropertyCondition { get; set; }
#endif
            /// <summary>Composed type representation for type <see cref="global::Klaviyo.Models.PriceDropCondition"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            public global::Klaviyo.Models.PriceDropCondition? PriceDropCondition { get; set; }
#nullable restore
#else
            public global::Klaviyo.Models.PriceDropCondition PriceDropCondition { get; set; }
#endif
            /// <summary>
            /// Creates a new instance of the appropriate class based on discriminator value
            /// </summary>
            /// <returns>A <see cref="global::Klaviyo.Models.TriggerBranchActionData_trigger_filter_condition_groups.TriggerBranchActionData_trigger_filter_condition_groups_conditions"/></returns>
            /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
            public static global::Klaviyo.Models.TriggerBranchActionData_trigger_filter_condition_groups.TriggerBranchActionData_trigger_filter_condition_groups_conditions CreateFromDiscriminatorValue(IParseNode parseNode)
            {
                _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
                var mappingValue = parseNode.GetChildNode("")?.GetStringValue();
                var result = new global::Klaviyo.Models.TriggerBranchActionData_trigger_filter_condition_groups.TriggerBranchActionData_trigger_filter_condition_groups_conditions();
                if("CustomObjectPropertyCondition".Equals(mappingValue, StringComparison.OrdinalIgnoreCase))
                {
                    result.CustomObjectPropertyCondition = new global::Klaviyo.Models.CustomObjectPropertyCondition();
                }
                else if("LowInventoryCondition".Equals(mappingValue, StringComparison.OrdinalIgnoreCase))
                {
                    result.LowInventoryCondition = new global::Klaviyo.Models.LowInventoryCondition();
                }
                else if("MetricPropertyCondition".Equals(mappingValue, StringComparison.OrdinalIgnoreCase))
                {
                    result.MetricPropertyCondition = new global::Klaviyo.Models.MetricPropertyCondition();
                }
                else if("PriceDropCondition".Equals(mappingValue, StringComparison.OrdinalIgnoreCase))
                {
                    result.PriceDropCondition = new global::Klaviyo.Models.PriceDropCondition();
                }
                return result;
            }
            /// <summary>
            /// The deserialization information for the current model
            /// </summary>
            /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
            public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
            {
                if(CustomObjectPropertyCondition != null)
                {
                    return CustomObjectPropertyCondition.GetFieldDeserializers();
                }
                else if(LowInventoryCondition != null)
                {
                    return LowInventoryCondition.GetFieldDeserializers();
                }
                else if(MetricPropertyCondition != null)
                {
                    return MetricPropertyCondition.GetFieldDeserializers();
                }
                else if(PriceDropCondition != null)
                {
                    return PriceDropCondition.GetFieldDeserializers();
                }
                return new Dictionary<string, Action<IParseNode>>();
            }
            /// <summary>
            /// Serializes information the current object
            /// </summary>
            /// <param name="writer">Serialization writer to use to serialize this model</param>
            public virtual void Serialize(ISerializationWriter writer)
            {
                _ = writer ?? throw new ArgumentNullException(nameof(writer));
                if(CustomObjectPropertyCondition != null)
                {
                    writer.WriteObjectValue<global::Klaviyo.Models.CustomObjectPropertyCondition>(null, CustomObjectPropertyCondition);
                }
                else if(LowInventoryCondition != null)
                {
                    writer.WriteObjectValue<global::Klaviyo.Models.LowInventoryCondition>(null, LowInventoryCondition);
                }
                else if(MetricPropertyCondition != null)
                {
                    writer.WriteObjectValue<global::Klaviyo.Models.MetricPropertyCondition>(null, MetricPropertyCondition);
                }
                else if(PriceDropCondition != null)
                {
                    writer.WriteObjectValue<global::Klaviyo.Models.PriceDropCondition>(null, PriceDropCondition);
                }
            }
        }
    }
}
#pragma warning restore CS0618
