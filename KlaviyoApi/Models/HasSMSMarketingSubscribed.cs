// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace Klaviyo.Models
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    #pragma warning disable CS1591
    public partial class HasSMSMarketingSubscribed : IAdditionalDataHolder, IParsable
    #pragma warning restore CS1591
    {
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>The filters property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::Klaviyo.Models.HasSMSMarketingSubscribed.HasSMSMarketingSubscribed_filters>? Filters { get; set; }
#nullable restore
#else
        public List<global::Klaviyo.Models.HasSMSMarketingSubscribed.HasSMSMarketingSubscribed_filters> Filters { get; set; }
#endif
        /// <summary>The subscription property</summary>
        public global::Klaviyo.Models.SubscribedEnum? Subscription { get; set; }
        /// <summary>
        /// Instantiates a new <see cref="global::Klaviyo.Models.HasSMSMarketingSubscribed"/> and sets the default values.
        /// </summary>
        public HasSMSMarketingSubscribed()
        {
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::Klaviyo.Models.HasSMSMarketingSubscribed"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::Klaviyo.Models.HasSMSMarketingSubscribed CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::Klaviyo.Models.HasSMSMarketingSubscribed();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "filters", n => { Filters = n.GetCollectionOfObjectValues<global::Klaviyo.Models.HasSMSMarketingSubscribed.HasSMSMarketingSubscribed_filters>(global::Klaviyo.Models.HasSMSMarketingSubscribed.HasSMSMarketingSubscribed_filters.CreateFromDiscriminatorValue)?.AsList(); } },
                { "subscription", n => { Subscription = n.GetEnumValue<global::Klaviyo.Models.SubscribedEnum>(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteCollectionOfObjectValues<global::Klaviyo.Models.HasSMSMarketingSubscribed.HasSMSMarketingSubscribed_filters>("filters", Filters);
            writer.WriteEnumValue<global::Klaviyo.Models.SubscribedEnum>("subscription", Subscription);
            writer.WriteAdditionalData(AdditionalData);
        }
        /// <summary>
        /// Composed type wrapper for classes <see cref="global::Klaviyo.Models.CheckoutMethodFilter"/>, <see cref="global::Klaviyo.Models.FormMethodFilter"/>, <see cref="global::Klaviyo.Models.InboundMessageMethodFilter"/>, <see cref="global::Klaviyo.Models.ManualAddMethodFilter"/>, <see cref="global::Klaviyo.Models.ManualImportMethodFilter"/>, <see cref="global::Klaviyo.Models.PreferencePageMethodFilter"/>, <see cref="global::Klaviyo.Models.SftpMethodFilter"/>, <see cref="global::Klaviyo.Models.ShopifyIntegrationMethodFilter"/>, <see cref="global::Klaviyo.Models.StatusDateFilter"/>
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
        public partial class HasSMSMarketingSubscribed_filters : IComposedTypeWrapper, IParsable
        {
            /// <summary>Composed type representation for type <see cref="global::Klaviyo.Models.CheckoutMethodFilter"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            public global::Klaviyo.Models.CheckoutMethodFilter? CheckoutMethodFilter { get; set; }
#nullable restore
#else
            public global::Klaviyo.Models.CheckoutMethodFilter CheckoutMethodFilter { get; set; }
#endif
            /// <summary>Composed type representation for type <see cref="global::Klaviyo.Models.FormMethodFilter"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            public global::Klaviyo.Models.FormMethodFilter? FormMethodFilter { get; set; }
#nullable restore
#else
            public global::Klaviyo.Models.FormMethodFilter FormMethodFilter { get; set; }
#endif
            /// <summary>Composed type representation for type <see cref="global::Klaviyo.Models.InboundMessageMethodFilter"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            public global::Klaviyo.Models.InboundMessageMethodFilter? InboundMessageMethodFilter { get; set; }
#nullable restore
#else
            public global::Klaviyo.Models.InboundMessageMethodFilter InboundMessageMethodFilter { get; set; }
#endif
            /// <summary>Composed type representation for type <see cref="global::Klaviyo.Models.ManualAddMethodFilter"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            public global::Klaviyo.Models.ManualAddMethodFilter? ManualAddMethodFilter { get; set; }
#nullable restore
#else
            public global::Klaviyo.Models.ManualAddMethodFilter ManualAddMethodFilter { get; set; }
#endif
            /// <summary>Composed type representation for type <see cref="global::Klaviyo.Models.ManualImportMethodFilter"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            public global::Klaviyo.Models.ManualImportMethodFilter? ManualImportMethodFilter { get; set; }
#nullable restore
#else
            public global::Klaviyo.Models.ManualImportMethodFilter ManualImportMethodFilter { get; set; }
#endif
            /// <summary>Composed type representation for type <see cref="global::Klaviyo.Models.PreferencePageMethodFilter"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            public global::Klaviyo.Models.PreferencePageMethodFilter? PreferencePageMethodFilter { get; set; }
#nullable restore
#else
            public global::Klaviyo.Models.PreferencePageMethodFilter PreferencePageMethodFilter { get; set; }
#endif
            /// <summary>Composed type representation for type <see cref="global::Klaviyo.Models.SftpMethodFilter"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            public global::Klaviyo.Models.SftpMethodFilter? SftpMethodFilter { get; set; }
#nullable restore
#else
            public global::Klaviyo.Models.SftpMethodFilter SftpMethodFilter { get; set; }
#endif
            /// <summary>Composed type representation for type <see cref="global::Klaviyo.Models.ShopifyIntegrationMethodFilter"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            public global::Klaviyo.Models.ShopifyIntegrationMethodFilter? ShopifyIntegrationMethodFilter { get; set; }
#nullable restore
#else
            public global::Klaviyo.Models.ShopifyIntegrationMethodFilter ShopifyIntegrationMethodFilter { get; set; }
#endif
            /// <summary>Composed type representation for type <see cref="global::Klaviyo.Models.StatusDateFilter"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            public global::Klaviyo.Models.StatusDateFilter? StatusDateFilter { get; set; }
#nullable restore
#else
            public global::Klaviyo.Models.StatusDateFilter StatusDateFilter { get; set; }
#endif
            /// <summary>
            /// Creates a new instance of the appropriate class based on discriminator value
            /// </summary>
            /// <returns>A <see cref="global::Klaviyo.Models.HasSMSMarketingSubscribed.HasSMSMarketingSubscribed_filters"/></returns>
            /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
            public static global::Klaviyo.Models.HasSMSMarketingSubscribed.HasSMSMarketingSubscribed_filters CreateFromDiscriminatorValue(IParseNode parseNode)
            {
                _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
                var mappingValue = parseNode.GetChildNode("")?.GetStringValue();
                var result = new global::Klaviyo.Models.HasSMSMarketingSubscribed.HasSMSMarketingSubscribed_filters();
                if("CheckoutMethodFilter".Equals(mappingValue, StringComparison.OrdinalIgnoreCase))
                {
                    result.CheckoutMethodFilter = new global::Klaviyo.Models.CheckoutMethodFilter();
                }
                else if("FormMethodFilter".Equals(mappingValue, StringComparison.OrdinalIgnoreCase))
                {
                    result.FormMethodFilter = new global::Klaviyo.Models.FormMethodFilter();
                }
                else if("InboundMessageMethodFilter".Equals(mappingValue, StringComparison.OrdinalIgnoreCase))
                {
                    result.InboundMessageMethodFilter = new global::Klaviyo.Models.InboundMessageMethodFilter();
                }
                else if("ManualAddMethodFilter".Equals(mappingValue, StringComparison.OrdinalIgnoreCase))
                {
                    result.ManualAddMethodFilter = new global::Klaviyo.Models.ManualAddMethodFilter();
                }
                else if("ManualImportMethodFilter".Equals(mappingValue, StringComparison.OrdinalIgnoreCase))
                {
                    result.ManualImportMethodFilter = new global::Klaviyo.Models.ManualImportMethodFilter();
                }
                else if("PreferencePageMethodFilter".Equals(mappingValue, StringComparison.OrdinalIgnoreCase))
                {
                    result.PreferencePageMethodFilter = new global::Klaviyo.Models.PreferencePageMethodFilter();
                }
                else if("SftpMethodFilter".Equals(mappingValue, StringComparison.OrdinalIgnoreCase))
                {
                    result.SftpMethodFilter = new global::Klaviyo.Models.SftpMethodFilter();
                }
                else if("ShopifyIntegrationMethodFilter".Equals(mappingValue, StringComparison.OrdinalIgnoreCase))
                {
                    result.ShopifyIntegrationMethodFilter = new global::Klaviyo.Models.ShopifyIntegrationMethodFilter();
                }
                else if("StatusDateFilter".Equals(mappingValue, StringComparison.OrdinalIgnoreCase))
                {
                    result.StatusDateFilter = new global::Klaviyo.Models.StatusDateFilter();
                }
                return result;
            }
            /// <summary>
            /// The deserialization information for the current model
            /// </summary>
            /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
            public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
            {
                if(CheckoutMethodFilter != null)
                {
                    return CheckoutMethodFilter.GetFieldDeserializers();
                }
                else if(FormMethodFilter != null)
                {
                    return FormMethodFilter.GetFieldDeserializers();
                }
                else if(InboundMessageMethodFilter != null)
                {
                    return InboundMessageMethodFilter.GetFieldDeserializers();
                }
                else if(ManualAddMethodFilter != null)
                {
                    return ManualAddMethodFilter.GetFieldDeserializers();
                }
                else if(ManualImportMethodFilter != null)
                {
                    return ManualImportMethodFilter.GetFieldDeserializers();
                }
                else if(PreferencePageMethodFilter != null)
                {
                    return PreferencePageMethodFilter.GetFieldDeserializers();
                }
                else if(SftpMethodFilter != null)
                {
                    return SftpMethodFilter.GetFieldDeserializers();
                }
                else if(ShopifyIntegrationMethodFilter != null)
                {
                    return ShopifyIntegrationMethodFilter.GetFieldDeserializers();
                }
                else if(StatusDateFilter != null)
                {
                    return StatusDateFilter.GetFieldDeserializers();
                }
                return new Dictionary<string, Action<IParseNode>>();
            }
            /// <summary>
            /// Serializes information the current object
            /// </summary>
            /// <param name="writer">Serialization writer to use to serialize this model</param>
            public virtual void Serialize(ISerializationWriter writer)
            {
                _ = writer ?? throw new ArgumentNullException(nameof(writer));
                if(CheckoutMethodFilter != null)
                {
                    writer.WriteObjectValue<global::Klaviyo.Models.CheckoutMethodFilter>(null, CheckoutMethodFilter);
                }
                else if(FormMethodFilter != null)
                {
                    writer.WriteObjectValue<global::Klaviyo.Models.FormMethodFilter>(null, FormMethodFilter);
                }
                else if(InboundMessageMethodFilter != null)
                {
                    writer.WriteObjectValue<global::Klaviyo.Models.InboundMessageMethodFilter>(null, InboundMessageMethodFilter);
                }
                else if(ManualAddMethodFilter != null)
                {
                    writer.WriteObjectValue<global::Klaviyo.Models.ManualAddMethodFilter>(null, ManualAddMethodFilter);
                }
                else if(ManualImportMethodFilter != null)
                {
                    writer.WriteObjectValue<global::Klaviyo.Models.ManualImportMethodFilter>(null, ManualImportMethodFilter);
                }
                else if(PreferencePageMethodFilter != null)
                {
                    writer.WriteObjectValue<global::Klaviyo.Models.PreferencePageMethodFilter>(null, PreferencePageMethodFilter);
                }
                else if(SftpMethodFilter != null)
                {
                    writer.WriteObjectValue<global::Klaviyo.Models.SftpMethodFilter>(null, SftpMethodFilter);
                }
                else if(ShopifyIntegrationMethodFilter != null)
                {
                    writer.WriteObjectValue<global::Klaviyo.Models.ShopifyIntegrationMethodFilter>(null, ShopifyIntegrationMethodFilter);
                }
                else if(StatusDateFilter != null)
                {
                    writer.WriteObjectValue<global::Klaviyo.Models.StatusDateFilter>(null, StatusDateFilter);
                }
            }
        }
    }
}
#pragma warning restore CS0618
