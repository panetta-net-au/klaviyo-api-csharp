// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace Klaviyo.Models
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    #pragma warning disable CS1591
    public partial class CatalogVariantCreateQueryResourceObject_attributes : IAdditionalDataHolder, IParsable
    #pragma warning restore CS1591
    {
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>The type of catalog. Currently only &quot;$default&quot; is supported.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? CatalogType { get; set; }
#nullable restore
#else
        public string CatalogType { get; set; }
#endif
        /// <summary>Flat JSON blob to provide custom metadata about the catalog item variant. May not exceed 100kb.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Klaviyo.Models.CatalogVariantCreateQueryResourceObject_attributes_custom_metadata? CustomMetadata { get; set; }
#nullable restore
#else
        public global::Klaviyo.Models.CatalogVariantCreateQueryResourceObject_attributes_custom_metadata CustomMetadata { get; set; }
#endif
        /// <summary>A description of the catalog item variant.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Description { get; set; }
#nullable restore
#else
        public string Description { get; set; }
#endif
        /// <summary>The ID of the catalog item variant in an external system.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? ExternalId { get; set; }
#nullable restore
#else
        public string ExternalId { get; set; }
#endif
        /// <summary>URL pointing to the location of a full image of the catalog item variant.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? ImageFullUrl { get; set; }
#nullable restore
#else
        public string ImageFullUrl { get; set; }
#endif
        /// <summary>List of URLs pointing to the locations of images of the catalog item variant.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<string>? Images { get; set; }
#nullable restore
#else
        public List<string> Images { get; set; }
#endif
        /// <summary>URL pointing to the location of an image thumbnail of the catalog item variant.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? ImageThumbnailUrl { get; set; }
#nullable restore
#else
        public string ImageThumbnailUrl { get; set; }
#endif
        /// <summary>The integration type. Currently only &quot;$custom&quot; is supported.</summary>
        public global::Klaviyo.Models.CatalogVariantCreateQueryResourceObject_attributes_integration_type? IntegrationType { get; set; }
        /// <summary>This field controls the visibility of this catalog item variant in product feeds/blocks. This field supports the following values:`1`: a product will not appear in dynamic product recommendation feeds and blocks if it is out of stock.`0` or `2`: a product can appear in dynamic product recommendation feeds and blocks regardless of inventory quantity.</summary>
        public int? InventoryPolicy { get; set; }
        /// <summary>The quantity of the catalog item variant currently in stock.</summary>
        public double? InventoryQuantity { get; set; }
        /// <summary>This field can be used to set the price on the catalog item variant, which is what gets displayed for the item variant when included in emails. For most price-update use cases, you will also want to update the `price` on any parent items using the [Update Catalog Item Endpoint](https://developers.klaviyo.com/en/reference/update_catalog_item).</summary>
        public double? Price { get; set; }
        /// <summary>Boolean value indicating whether the catalog item variant is published.</summary>
        public bool? Published { get; set; }
        /// <summary>The SKU of the catalog item variant.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Sku { get; set; }
#nullable restore
#else
        public string Sku { get; set; }
#endif
        /// <summary>The title of the catalog item variant.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Title { get; set; }
#nullable restore
#else
        public string Title { get; set; }
#endif
        /// <summary>URL pointing to the location of the catalog item variant on your website.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Url { get; set; }
#nullable restore
#else
        public string Url { get; set; }
#endif
        /// <summary>
        /// Instantiates a new <see cref="global::Klaviyo.Models.CatalogVariantCreateQueryResourceObject_attributes"/> and sets the default values.
        /// </summary>
        public CatalogVariantCreateQueryResourceObject_attributes()
        {
            AdditionalData = new Dictionary<string, object>();
            CatalogType = "$default";
            IntegrationType = global::Klaviyo.Models.CatalogVariantCreateQueryResourceObject_attributes_integration_type.Custom;
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::Klaviyo.Models.CatalogVariantCreateQueryResourceObject_attributes"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::Klaviyo.Models.CatalogVariantCreateQueryResourceObject_attributes CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::Klaviyo.Models.CatalogVariantCreateQueryResourceObject_attributes();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "catalog_type", n => { CatalogType = n.GetStringValue(); } },
                { "custom_metadata", n => { CustomMetadata = n.GetObjectValue<global::Klaviyo.Models.CatalogVariantCreateQueryResourceObject_attributes_custom_metadata>(global::Klaviyo.Models.CatalogVariantCreateQueryResourceObject_attributes_custom_metadata.CreateFromDiscriminatorValue); } },
                { "description", n => { Description = n.GetStringValue(); } },
                { "external_id", n => { ExternalId = n.GetStringValue(); } },
                { "image_full_url", n => { ImageFullUrl = n.GetStringValue(); } },
                { "image_thumbnail_url", n => { ImageThumbnailUrl = n.GetStringValue(); } },
                { "images", n => { Images = n.GetCollectionOfPrimitiveValues<string>()?.AsList(); } },
                { "integration_type", n => { IntegrationType = n.GetEnumValue<global::Klaviyo.Models.CatalogVariantCreateQueryResourceObject_attributes_integration_type>(); } },
                { "inventory_policy", n => { InventoryPolicy = n.GetIntValue(); } },
                { "inventory_quantity", n => { InventoryQuantity = n.GetDoubleValue(); } },
                { "price", n => { Price = n.GetDoubleValue(); } },
                { "published", n => { Published = n.GetBoolValue(); } },
                { "sku", n => { Sku = n.GetStringValue(); } },
                { "title", n => { Title = n.GetStringValue(); } },
                { "url", n => { Url = n.GetStringValue(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteStringValue("catalog_type", CatalogType);
            writer.WriteObjectValue<global::Klaviyo.Models.CatalogVariantCreateQueryResourceObject_attributes_custom_metadata>("custom_metadata", CustomMetadata);
            writer.WriteStringValue("description", Description);
            writer.WriteStringValue("external_id", ExternalId);
            writer.WriteStringValue("image_full_url", ImageFullUrl);
            writer.WriteCollectionOfPrimitiveValues<string>("images", Images);
            writer.WriteStringValue("image_thumbnail_url", ImageThumbnailUrl);
            writer.WriteEnumValue<global::Klaviyo.Models.CatalogVariantCreateQueryResourceObject_attributes_integration_type>("integration_type", IntegrationType);
            writer.WriteIntValue("inventory_policy", InventoryPolicy);
            writer.WriteDoubleValue("inventory_quantity", InventoryQuantity);
            writer.WriteDoubleValue("price", Price);
            writer.WriteBoolValue("published", Published);
            writer.WriteStringValue("sku", Sku);
            writer.WriteStringValue("title", Title);
            writer.WriteStringValue("url", Url);
            writer.WriteAdditionalData(AdditionalData);
        }
    }
}
#pragma warning restore CS0618
