// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace Klaviyo.Models
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    #pragma warning disable CS1591
    public partial class AbTestAction_data : IAdditionalDataHolder, IParsable
    #pragma warning restore CS1591
    {
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>The current_experiment property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Klaviyo.Models.AbTestAction_data_current_experiment? CurrentExperiment { get; set; }
#nullable restore
#else
        public global::Klaviyo.Models.AbTestAction_data_current_experiment CurrentExperiment { get; set; }
#endif
        /// <summary>The status of the A/B test action experiment.</summary>
        public global::Klaviyo.Models.AbTestAction_data_experiment_status? ExperimentStatus { get; set; }
        /// <summary>The main_action property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Klaviyo.Models.AbTestAction_data.AbTestAction_data_main_action? MainAction { get; set; }
#nullable restore
#else
        public global::Klaviyo.Models.AbTestAction_data.AbTestAction_data_main_action MainAction { get; set; }
#endif
        /// <summary>Flow action status.</summary>
        public global::Klaviyo.Models.AbTestAction_data_status? Status { get; set; }
        /// <summary>
        /// Instantiates a new <see cref="global::Klaviyo.Models.AbTestAction_data"/> and sets the default values.
        /// </summary>
        public AbTestAction_data()
        {
            AdditionalData = new Dictionary<string, object>();
            ExperimentStatus = global::Klaviyo.Models.AbTestAction_data_experiment_status.Draft;
            Status = global::Klaviyo.Models.AbTestAction_data_status.Draft;
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::Klaviyo.Models.AbTestAction_data"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::Klaviyo.Models.AbTestAction_data CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::Klaviyo.Models.AbTestAction_data();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "current_experiment", n => { CurrentExperiment = n.GetObjectValue<global::Klaviyo.Models.AbTestAction_data_current_experiment>(global::Klaviyo.Models.AbTestAction_data_current_experiment.CreateFromDiscriminatorValue); } },
                { "experiment_status", n => { ExperimentStatus = n.GetEnumValue<global::Klaviyo.Models.AbTestAction_data_experiment_status>(); } },
                { "main_action", n => { MainAction = n.GetObjectValue<global::Klaviyo.Models.AbTestAction_data.AbTestAction_data_main_action>(global::Klaviyo.Models.AbTestAction_data.AbTestAction_data_main_action.CreateFromDiscriminatorValue); } },
                { "status", n => { Status = n.GetEnumValue<global::Klaviyo.Models.AbTestAction_data_status>(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteObjectValue<global::Klaviyo.Models.AbTestAction_data_current_experiment>("current_experiment", CurrentExperiment);
            writer.WriteEnumValue<global::Klaviyo.Models.AbTestAction_data_experiment_status>("experiment_status", ExperimentStatus);
            writer.WriteObjectValue<global::Klaviyo.Models.AbTestAction_data.AbTestAction_data_main_action>("main_action", MainAction);
            writer.WriteEnumValue<global::Klaviyo.Models.AbTestAction_data_status>("status", Status);
            writer.WriteAdditionalData(AdditionalData);
        }
        /// <summary>
        /// Composed type wrapper for classes <see cref="global::Klaviyo.Models.SendEmailAction"/>, <see cref="global::Klaviyo.Models.SendSmsAction"/>
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
        public partial class AbTestAction_data_main_action : IComposedTypeWrapper, IParsable
        {
            /// <summary>Composed type representation for type <see cref="global::Klaviyo.Models.SendEmailAction"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            public global::Klaviyo.Models.SendEmailAction? SendEmailAction { get; set; }
#nullable restore
#else
            public global::Klaviyo.Models.SendEmailAction SendEmailAction { get; set; }
#endif
            /// <summary>Composed type representation for type <see cref="global::Klaviyo.Models.SendSmsAction"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            public global::Klaviyo.Models.SendSmsAction? SendSmsAction { get; set; }
#nullable restore
#else
            public global::Klaviyo.Models.SendSmsAction SendSmsAction { get; set; }
#endif
            /// <summary>
            /// Creates a new instance of the appropriate class based on discriminator value
            /// </summary>
            /// <returns>A <see cref="global::Klaviyo.Models.AbTestAction_data.AbTestAction_data_main_action"/></returns>
            /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
            public static global::Klaviyo.Models.AbTestAction_data.AbTestAction_data_main_action CreateFromDiscriminatorValue(IParseNode parseNode)
            {
                _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
                var mappingValue = parseNode.GetChildNode("")?.GetStringValue();
                var result = new global::Klaviyo.Models.AbTestAction_data.AbTestAction_data_main_action();
                if("SendEmailAction".Equals(mappingValue, StringComparison.OrdinalIgnoreCase))
                {
                    result.SendEmailAction = new global::Klaviyo.Models.SendEmailAction();
                }
                else if("SendSmsAction".Equals(mappingValue, StringComparison.OrdinalIgnoreCase))
                {
                    result.SendSmsAction = new global::Klaviyo.Models.SendSmsAction();
                }
                return result;
            }
            /// <summary>
            /// The deserialization information for the current model
            /// </summary>
            /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
            public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
            {
                if(SendEmailAction != null)
                {
                    return SendEmailAction.GetFieldDeserializers();
                }
                else if(SendSmsAction != null)
                {
                    return SendSmsAction.GetFieldDeserializers();
                }
                return new Dictionary<string, Action<IParseNode>>();
            }
            /// <summary>
            /// Serializes information the current object
            /// </summary>
            /// <param name="writer">Serialization writer to use to serialize this model</param>
            public virtual void Serialize(ISerializationWriter writer)
            {
                _ = writer ?? throw new ArgumentNullException(nameof(writer));
                if(SendEmailAction != null)
                {
                    writer.WriteObjectValue<global::Klaviyo.Models.SendEmailAction>(null, SendEmailAction);
                }
                else if(SendSmsAction != null)
                {
                    writer.WriteObjectValue<global::Klaviyo.Models.SendSmsAction>(null, SendSmsAction);
                }
            }
        }
    }
}
#pragma warning restore CS0618
