// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace Klaviyo.Models
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    #pragma warning disable CS1591
    public partial class StaticSendStrategy : IAdditionalDataHolder, IParsable
    #pragma warning restore CS1591
    {
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>The time to send at</summary>
        public DateTimeOffset? Datetime { get; set; }
        /// <summary>The method property</summary>
        public global::Klaviyo.Models.StaticEnum? Method { get; set; }
        /// <summary>If the campaign should be sent with local recipient timezone send (requires UTC time) or statically sent at the given time.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Klaviyo.Models.StaticSendStrategy.StaticSendStrategy_options? Options { get; set; }
#nullable restore
#else
        public global::Klaviyo.Models.StaticSendStrategy.StaticSendStrategy_options Options { get; set; }
#endif
        /// <summary>
        /// Instantiates a new <see cref="global::Klaviyo.Models.StaticSendStrategy"/> and sets the default values.
        /// </summary>
        public StaticSendStrategy()
        {
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::Klaviyo.Models.StaticSendStrategy"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::Klaviyo.Models.StaticSendStrategy CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::Klaviyo.Models.StaticSendStrategy();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "datetime", n => { Datetime = n.GetDateTimeOffsetValue(); } },
                { "method", n => { Method = n.GetEnumValue<global::Klaviyo.Models.StaticEnum>(); } },
                { "options", n => { Options = n.GetObjectValue<global::Klaviyo.Models.StaticSendStrategy.StaticSendStrategy_options>(global::Klaviyo.Models.StaticSendStrategy.StaticSendStrategy_options.CreateFromDiscriminatorValue); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteDateTimeOffsetValue("datetime", Datetime);
            writer.WriteEnumValue<global::Klaviyo.Models.StaticEnum>("method", Method);
            writer.WriteObjectValue<global::Klaviyo.Models.StaticSendStrategy.StaticSendStrategy_options>("options", Options);
            writer.WriteAdditionalData(AdditionalData);
        }
        /// <summary>
        /// Composed type wrapper for classes <see cref="global::Klaviyo.Models.LocalStaticSend"/>, <see cref="global::Klaviyo.Models.NonLocalStaticSend"/>
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
        public partial class StaticSendStrategy_options : IComposedTypeWrapper, IParsable
        {
            /// <summary>Composed type representation for type <see cref="global::Klaviyo.Models.LocalStaticSend"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            public global::Klaviyo.Models.LocalStaticSend? LocalStaticSend { get; set; }
#nullable restore
#else
            public global::Klaviyo.Models.LocalStaticSend LocalStaticSend { get; set; }
#endif
            /// <summary>Composed type representation for type <see cref="global::Klaviyo.Models.NonLocalStaticSend"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            public global::Klaviyo.Models.NonLocalStaticSend? NonLocalStaticSend { get; set; }
#nullable restore
#else
            public global::Klaviyo.Models.NonLocalStaticSend NonLocalStaticSend { get; set; }
#endif
            /// <summary>
            /// Creates a new instance of the appropriate class based on discriminator value
            /// </summary>
            /// <returns>A <see cref="global::Klaviyo.Models.StaticSendStrategy.StaticSendStrategy_options"/></returns>
            /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
            public static global::Klaviyo.Models.StaticSendStrategy.StaticSendStrategy_options CreateFromDiscriminatorValue(IParseNode parseNode)
            {
                _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
                var mappingValue = parseNode.GetChildNode("")?.GetStringValue();
                var result = new global::Klaviyo.Models.StaticSendStrategy.StaticSendStrategy_options();
                if("LocalStaticSend".Equals(mappingValue, StringComparison.OrdinalIgnoreCase))
                {
                    result.LocalStaticSend = new global::Klaviyo.Models.LocalStaticSend();
                }
                else if("NonLocalStaticSend".Equals(mappingValue, StringComparison.OrdinalIgnoreCase))
                {
                    result.NonLocalStaticSend = new global::Klaviyo.Models.NonLocalStaticSend();
                }
                return result;
            }
            /// <summary>
            /// The deserialization information for the current model
            /// </summary>
            /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
            public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
            {
                if(LocalStaticSend != null)
                {
                    return LocalStaticSend.GetFieldDeserializers();
                }
                else if(NonLocalStaticSend != null)
                {
                    return NonLocalStaticSend.GetFieldDeserializers();
                }
                return new Dictionary<string, Action<IParseNode>>();
            }
            /// <summary>
            /// Serializes information the current object
            /// </summary>
            /// <param name="writer">Serialization writer to use to serialize this model</param>
            public virtual void Serialize(ISerializationWriter writer)
            {
                _ = writer ?? throw new ArgumentNullException(nameof(writer));
                if(LocalStaticSend != null)
                {
                    writer.WriteObjectValue<global::Klaviyo.Models.LocalStaticSend>(null, LocalStaticSend);
                }
                else if(NonLocalStaticSend != null)
                {
                    writer.WriteObjectValue<global::Klaviyo.Models.NonLocalStaticSend>(null, NonLocalStaticSend);
                }
            }
        }
    }
}
#pragma warning restore CS0618
