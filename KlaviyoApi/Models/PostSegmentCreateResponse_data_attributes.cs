// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace Klaviyo.Models
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    #pragma warning disable CS1591
    public partial class PostSegmentCreateResponse_data_attributes : IAdditionalDataHolder, IParsable
    #pragma warning restore CS1591
    {
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>Date and time when the segment was created, in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm)</summary>
        public DateTimeOffset? Created { get; set; }
        /// <summary>The definition property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Klaviyo.Models.SegmentDefinition? Definition { get; set; }
#nullable restore
#else
        public global::Klaviyo.Models.SegmentDefinition Definition { get; set; }
#endif
        /// <summary>The is_active property</summary>
        public bool? IsActive { get; set; }
        /// <summary>The is_processing property</summary>
        public bool? IsProcessing { get; set; }
        /// <summary>The is_starred property</summary>
        public bool? IsStarred { get; set; }
        /// <summary>A helpful name to label the segment</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Name { get; set; }
#nullable restore
#else
        public string Name { get; set; }
#endif
        /// <summary>Date and time when the segment was last updated, in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm)</summary>
        public DateTimeOffset? Updated { get; set; }
        /// <summary>
        /// Instantiates a new <see cref="global::Klaviyo.Models.PostSegmentCreateResponse_data_attributes"/> and sets the default values.
        /// </summary>
        public PostSegmentCreateResponse_data_attributes()
        {
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::Klaviyo.Models.PostSegmentCreateResponse_data_attributes"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::Klaviyo.Models.PostSegmentCreateResponse_data_attributes CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::Klaviyo.Models.PostSegmentCreateResponse_data_attributes();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "created", n => { Created = n.GetDateTimeOffsetValue(); } },
                { "definition", n => { Definition = n.GetObjectValue<global::Klaviyo.Models.SegmentDefinition>(global::Klaviyo.Models.SegmentDefinition.CreateFromDiscriminatorValue); } },
                { "is_active", n => { IsActive = n.GetBoolValue(); } },
                { "is_processing", n => { IsProcessing = n.GetBoolValue(); } },
                { "is_starred", n => { IsStarred = n.GetBoolValue(); } },
                { "name", n => { Name = n.GetStringValue(); } },
                { "updated", n => { Updated = n.GetDateTimeOffsetValue(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteDateTimeOffsetValue("created", Created);
            writer.WriteObjectValue<global::Klaviyo.Models.SegmentDefinition>("definition", Definition);
            writer.WriteBoolValue("is_active", IsActive);
            writer.WriteBoolValue("is_processing", IsProcessing);
            writer.WriteBoolValue("is_starred", IsStarred);
            writer.WriteStringValue("name", Name);
            writer.WriteDateTimeOffsetValue("updated", Updated);
            writer.WriteAdditionalData(AdditionalData);
        }
    }
}
#pragma warning restore CS0618
