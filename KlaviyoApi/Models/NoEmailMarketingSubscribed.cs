// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace Klaviyo.Models
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    #pragma warning disable CS1591
    public partial class NoEmailMarketingSubscribed : IAdditionalDataHolder, IParsable
    #pragma warning restore CS1591
    {
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>The filters property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::Klaviyo.Models.NoEmailMarketingSubscribed.NoEmailMarketingSubscribed_filters>? Filters { get; set; }
#nullable restore
#else
        public List<global::Klaviyo.Models.NoEmailMarketingSubscribed.NoEmailMarketingSubscribed_filters> Filters { get; set; }
#endif
        /// <summary>The subscription property</summary>
        public global::Klaviyo.Models.SubscribedEnum? Subscription { get; set; }
        /// <summary>
        /// Instantiates a new <see cref="global::Klaviyo.Models.NoEmailMarketingSubscribed"/> and sets the default values.
        /// </summary>
        public NoEmailMarketingSubscribed()
        {
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::Klaviyo.Models.NoEmailMarketingSubscribed"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::Klaviyo.Models.NoEmailMarketingSubscribed CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::Klaviyo.Models.NoEmailMarketingSubscribed();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "filters", n => { Filters = n.GetCollectionOfObjectValues<global::Klaviyo.Models.NoEmailMarketingSubscribed.NoEmailMarketingSubscribed_filters>(global::Klaviyo.Models.NoEmailMarketingSubscribed.NoEmailMarketingSubscribed_filters.CreateFromDiscriminatorValue)?.AsList(); } },
                { "subscription", n => { Subscription = n.GetEnumValue<global::Klaviyo.Models.SubscribedEnum>(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteCollectionOfObjectValues<global::Klaviyo.Models.NoEmailMarketingSubscribed.NoEmailMarketingSubscribed_filters>("filters", Filters);
            writer.WriteEnumValue<global::Klaviyo.Models.SubscribedEnum>("subscription", Subscription);
            writer.WriteAdditionalData(AdditionalData);
        }
        /// <summary>
        /// Composed type wrapper for classes <see cref="global::Klaviyo.Models.BounceDateFilter"/>, <see cref="global::Klaviyo.Models.InvalidEmailDateFilter"/>, <see cref="global::Klaviyo.Models.ManualSuppressionDateFilter"/>
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
        public partial class NoEmailMarketingSubscribed_filters : IComposedTypeWrapper, IParsable
        {
            /// <summary>Composed type representation for type <see cref="global::Klaviyo.Models.BounceDateFilter"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            public global::Klaviyo.Models.BounceDateFilter? BounceDateFilter { get; set; }
#nullable restore
#else
            public global::Klaviyo.Models.BounceDateFilter BounceDateFilter { get; set; }
#endif
            /// <summary>Composed type representation for type <see cref="global::Klaviyo.Models.InvalidEmailDateFilter"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            public global::Klaviyo.Models.InvalidEmailDateFilter? InvalidEmailDateFilter { get; set; }
#nullable restore
#else
            public global::Klaviyo.Models.InvalidEmailDateFilter InvalidEmailDateFilter { get; set; }
#endif
            /// <summary>Composed type representation for type <see cref="global::Klaviyo.Models.ManualSuppressionDateFilter"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            public global::Klaviyo.Models.ManualSuppressionDateFilter? ManualSuppressionDateFilter { get; set; }
#nullable restore
#else
            public global::Klaviyo.Models.ManualSuppressionDateFilter ManualSuppressionDateFilter { get; set; }
#endif
            /// <summary>
            /// Creates a new instance of the appropriate class based on discriminator value
            /// </summary>
            /// <returns>A <see cref="global::Klaviyo.Models.NoEmailMarketingSubscribed.NoEmailMarketingSubscribed_filters"/></returns>
            /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
            public static global::Klaviyo.Models.NoEmailMarketingSubscribed.NoEmailMarketingSubscribed_filters CreateFromDiscriminatorValue(IParseNode parseNode)
            {
                _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
                var mappingValue = parseNode.GetChildNode("")?.GetStringValue();
                var result = new global::Klaviyo.Models.NoEmailMarketingSubscribed.NoEmailMarketingSubscribed_filters();
                if("BounceDateFilter".Equals(mappingValue, StringComparison.OrdinalIgnoreCase))
                {
                    result.BounceDateFilter = new global::Klaviyo.Models.BounceDateFilter();
                }
                else if("InvalidEmailDateFilter".Equals(mappingValue, StringComparison.OrdinalIgnoreCase))
                {
                    result.InvalidEmailDateFilter = new global::Klaviyo.Models.InvalidEmailDateFilter();
                }
                else if("ManualSuppressionDateFilter".Equals(mappingValue, StringComparison.OrdinalIgnoreCase))
                {
                    result.ManualSuppressionDateFilter = new global::Klaviyo.Models.ManualSuppressionDateFilter();
                }
                return result;
            }
            /// <summary>
            /// The deserialization information for the current model
            /// </summary>
            /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
            public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
            {
                if(BounceDateFilter != null)
                {
                    return BounceDateFilter.GetFieldDeserializers();
                }
                else if(InvalidEmailDateFilter != null)
                {
                    return InvalidEmailDateFilter.GetFieldDeserializers();
                }
                else if(ManualSuppressionDateFilter != null)
                {
                    return ManualSuppressionDateFilter.GetFieldDeserializers();
                }
                return new Dictionary<string, Action<IParseNode>>();
            }
            /// <summary>
            /// Serializes information the current object
            /// </summary>
            /// <param name="writer">Serialization writer to use to serialize this model</param>
            public virtual void Serialize(ISerializationWriter writer)
            {
                _ = writer ?? throw new ArgumentNullException(nameof(writer));
                if(BounceDateFilter != null)
                {
                    writer.WriteObjectValue<global::Klaviyo.Models.BounceDateFilter>(null, BounceDateFilter);
                }
                else if(InvalidEmailDateFilter != null)
                {
                    writer.WriteObjectValue<global::Klaviyo.Models.InvalidEmailDateFilter>(null, InvalidEmailDateFilter);
                }
                else if(ManualSuppressionDateFilter != null)
                {
                    writer.WriteObjectValue<global::Klaviyo.Models.ManualSuppressionDateFilter>(null, ManualSuppressionDateFilter);
                }
            }
        }
    }
}
#pragma warning restore CS0618
