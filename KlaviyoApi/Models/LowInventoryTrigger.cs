// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace Klaviyo.Models
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    #pragma warning disable CS1591
    public partial class LowInventoryTrigger : IAdditionalDataHolder, IParsable
    #pragma warning restore CS1591
    {
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>The audience property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::Klaviyo.Models.LowInventoryTrigger_audience?>? Audience { get; set; }
#nullable restore
#else
        public List<global::Klaviyo.Models.LowInventoryTrigger_audience?> Audience { get; set; }
#endif
        /// <summary>The inventory_count property</summary>
        public int? InventoryCount { get; set; }
        /// <summary>Low inventory product level.</summary>
        public global::Klaviyo.Models.LowInventoryTrigger_product_level? ProductLevel { get; set; }
        /// <summary>The timeframe_days property</summary>
        public int? TimeframeDays { get; set; }
        /// <summary>The trigger_filter property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Klaviyo.Models.LowInventoryConditionFilter? TriggerFilter { get; set; }
#nullable restore
#else
        public global::Klaviyo.Models.LowInventoryConditionFilter TriggerFilter { get; set; }
#endif
        /// <summary>The type property</summary>
        public global::Klaviyo.Models.LowInventoryEnum? Type { get; set; }
        /// <summary>
        /// Instantiates a new <see cref="global::Klaviyo.Models.LowInventoryTrigger"/> and sets the default values.
        /// </summary>
        public LowInventoryTrigger()
        {
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::Klaviyo.Models.LowInventoryTrigger"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::Klaviyo.Models.LowInventoryTrigger CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::Klaviyo.Models.LowInventoryTrigger();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "audience", n => { Audience = n.GetCollectionOfEnumValues<global::Klaviyo.Models.LowInventoryTrigger_audience>()?.AsList(); } },
                { "inventory_count", n => { InventoryCount = n.GetIntValue(); } },
                { "product_level", n => { ProductLevel = n.GetEnumValue<global::Klaviyo.Models.LowInventoryTrigger_product_level>(); } },
                { "timeframe_days", n => { TimeframeDays = n.GetIntValue(); } },
                { "trigger_filter", n => { TriggerFilter = n.GetObjectValue<global::Klaviyo.Models.LowInventoryConditionFilter>(global::Klaviyo.Models.LowInventoryConditionFilter.CreateFromDiscriminatorValue); } },
                { "type", n => { Type = n.GetEnumValue<global::Klaviyo.Models.LowInventoryEnum>(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteCollectionOfEnumValues<global::Klaviyo.Models.LowInventoryTrigger_audience>("audience", Audience);
            writer.WriteIntValue("inventory_count", InventoryCount);
            writer.WriteEnumValue<global::Klaviyo.Models.LowInventoryTrigger_product_level>("product_level", ProductLevel);
            writer.WriteIntValue("timeframe_days", TimeframeDays);
            writer.WriteObjectValue<global::Klaviyo.Models.LowInventoryConditionFilter>("trigger_filter", TriggerFilter);
            writer.WriteEnumValue<global::Klaviyo.Models.LowInventoryEnum>("type", Type);
            writer.WriteAdditionalData(AdditionalData);
        }
    }
}
#pragma warning restore CS0618
