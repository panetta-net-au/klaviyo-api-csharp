// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace Klaviyo.Models
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    #pragma warning disable CS1591
    public partial class RenderOptionsSubObject : IAdditionalDataHolder, IParsable
    #pragma warning restore CS1591
    {
        /// <summary>The add_info_link property</summary>
        public bool? AddInfoLink { get; set; }
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>The add_opt_out_language property</summary>
        public bool? AddOptOutLanguage { get; set; }
        /// <summary>The add_org_prefix property</summary>
        public bool? AddOrgPrefix { get; set; }
        /// <summary>The shorten_links property</summary>
        public bool? ShortenLinks { get; set; }
        /// <summary>
        /// Instantiates a new <see cref="global::Klaviyo.Models.RenderOptionsSubObject"/> and sets the default values.
        /// </summary>
        public RenderOptionsSubObject()
        {
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::Klaviyo.Models.RenderOptionsSubObject"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::Klaviyo.Models.RenderOptionsSubObject CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::Klaviyo.Models.RenderOptionsSubObject();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "add_info_link", n => { AddInfoLink = n.GetBoolValue(); } },
                { "add_opt_out_language", n => { AddOptOutLanguage = n.GetBoolValue(); } },
                { "add_org_prefix", n => { AddOrgPrefix = n.GetBoolValue(); } },
                { "shorten_links", n => { ShortenLinks = n.GetBoolValue(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteBoolValue("add_info_link", AddInfoLink);
            writer.WriteBoolValue("add_opt_out_language", AddOptOutLanguage);
            writer.WriteBoolValue("add_org_prefix", AddOrgPrefix);
            writer.WriteBoolValue("shorten_links", ShortenLinks);
            writer.WriteAdditionalData(AdditionalData);
        }
    }
}
#pragma warning restore CS0618
