// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace Klaviyo.Models
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    #pragma warning disable CS1591
    public partial class HasEmailMarketingConsent : IAdditionalDataHolder, IParsable
    #pragma warning restore CS1591
    {
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>The can_receive_marketing property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public UntypedNode? CanReceiveMarketing { get; set; }
#nullable restore
#else
        public UntypedNode CanReceiveMarketing { get; set; }
#endif
        /// <summary>The channel property</summary>
        public global::Klaviyo.Models.EmailEnum? Channel { get; set; }
        /// <summary>The consent_status property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Klaviyo.Models.HasEmailMarketingConsent.HasEmailMarketingConsent_consent_status? ConsentStatus { get; set; }
#nullable restore
#else
        public global::Klaviyo.Models.HasEmailMarketingConsent.HasEmailMarketingConsent_consent_status ConsentStatus { get; set; }
#endif
        /// <summary>
        /// Instantiates a new <see cref="global::Klaviyo.Models.HasEmailMarketingConsent"/> and sets the default values.
        /// </summary>
        public HasEmailMarketingConsent()
        {
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::Klaviyo.Models.HasEmailMarketingConsent"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::Klaviyo.Models.HasEmailMarketingConsent CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::Klaviyo.Models.HasEmailMarketingConsent();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "can_receive_marketing", n => { CanReceiveMarketing = n.GetObjectValue<UntypedNode>(UntypedNode.CreateFromDiscriminatorValue); } },
                { "channel", n => { Channel = n.GetEnumValue<global::Klaviyo.Models.EmailEnum>(); } },
                { "consent_status", n => { ConsentStatus = n.GetObjectValue<global::Klaviyo.Models.HasEmailMarketingConsent.HasEmailMarketingConsent_consent_status>(global::Klaviyo.Models.HasEmailMarketingConsent.HasEmailMarketingConsent_consent_status.CreateFromDiscriminatorValue); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteObjectValue<UntypedNode>("can_receive_marketing", CanReceiveMarketing);
            writer.WriteEnumValue<global::Klaviyo.Models.EmailEnum>("channel", Channel);
            writer.WriteObjectValue<global::Klaviyo.Models.HasEmailMarketingConsent.HasEmailMarketingConsent_consent_status>("consent_status", ConsentStatus);
            writer.WriteAdditionalData(AdditionalData);
        }
        /// <summary>
        /// Composed type wrapper for classes <see cref="global::Klaviyo.Models.HasEmailMarketing"/>, <see cref="global::Klaviyo.Models.HasEmailMarketingNeverSubscribed"/>, <see cref="global::Klaviyo.Models.HasEmailMarketingSubscribed"/>
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
        public partial class HasEmailMarketingConsent_consent_status : IComposedTypeWrapper, IParsable
        {
            /// <summary>Composed type representation for type <see cref="global::Klaviyo.Models.HasEmailMarketing"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            public global::Klaviyo.Models.HasEmailMarketing? HasEmailMarketing { get; set; }
#nullable restore
#else
            public global::Klaviyo.Models.HasEmailMarketing HasEmailMarketing { get; set; }
#endif
            /// <summary>Composed type representation for type <see cref="global::Klaviyo.Models.HasEmailMarketingNeverSubscribed"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            public global::Klaviyo.Models.HasEmailMarketingNeverSubscribed? HasEmailMarketingNeverSubscribed { get; set; }
#nullable restore
#else
            public global::Klaviyo.Models.HasEmailMarketingNeverSubscribed HasEmailMarketingNeverSubscribed { get; set; }
#endif
            /// <summary>Composed type representation for type <see cref="global::Klaviyo.Models.HasEmailMarketingSubscribed"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            public global::Klaviyo.Models.HasEmailMarketingSubscribed? HasEmailMarketingSubscribed { get; set; }
#nullable restore
#else
            public global::Klaviyo.Models.HasEmailMarketingSubscribed HasEmailMarketingSubscribed { get; set; }
#endif
            /// <summary>
            /// Creates a new instance of the appropriate class based on discriminator value
            /// </summary>
            /// <returns>A <see cref="global::Klaviyo.Models.HasEmailMarketingConsent.HasEmailMarketingConsent_consent_status"/></returns>
            /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
            public static global::Klaviyo.Models.HasEmailMarketingConsent.HasEmailMarketingConsent_consent_status CreateFromDiscriminatorValue(IParseNode parseNode)
            {
                _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
                var mappingValue = parseNode.GetChildNode("")?.GetStringValue();
                var result = new global::Klaviyo.Models.HasEmailMarketingConsent.HasEmailMarketingConsent_consent_status();
                if("HasEmailMarketing".Equals(mappingValue, StringComparison.OrdinalIgnoreCase))
                {
                    result.HasEmailMarketing = new global::Klaviyo.Models.HasEmailMarketing();
                }
                else if("HasEmailMarketingNeverSubscribed".Equals(mappingValue, StringComparison.OrdinalIgnoreCase))
                {
                    result.HasEmailMarketingNeverSubscribed = new global::Klaviyo.Models.HasEmailMarketingNeverSubscribed();
                }
                else if("HasEmailMarketingSubscribed".Equals(mappingValue, StringComparison.OrdinalIgnoreCase))
                {
                    result.HasEmailMarketingSubscribed = new global::Klaviyo.Models.HasEmailMarketingSubscribed();
                }
                return result;
            }
            /// <summary>
            /// The deserialization information for the current model
            /// </summary>
            /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
            public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
            {
                if(HasEmailMarketing != null)
                {
                    return HasEmailMarketing.GetFieldDeserializers();
                }
                else if(HasEmailMarketingNeverSubscribed != null)
                {
                    return HasEmailMarketingNeverSubscribed.GetFieldDeserializers();
                }
                else if(HasEmailMarketingSubscribed != null)
                {
                    return HasEmailMarketingSubscribed.GetFieldDeserializers();
                }
                return new Dictionary<string, Action<IParseNode>>();
            }
            /// <summary>
            /// Serializes information the current object
            /// </summary>
            /// <param name="writer">Serialization writer to use to serialize this model</param>
            public virtual void Serialize(ISerializationWriter writer)
            {
                _ = writer ?? throw new ArgumentNullException(nameof(writer));
                if(HasEmailMarketing != null)
                {
                    writer.WriteObjectValue<global::Klaviyo.Models.HasEmailMarketing>(null, HasEmailMarketing);
                }
                else if(HasEmailMarketingNeverSubscribed != null)
                {
                    writer.WriteObjectValue<global::Klaviyo.Models.HasEmailMarketingNeverSubscribed>(null, HasEmailMarketingNeverSubscribed);
                }
                else if(HasEmailMarketingSubscribed != null)
                {
                    writer.WriteObjectValue<global::Klaviyo.Models.HasEmailMarketingSubscribed>(null, HasEmailMarketingSubscribed);
                }
            }
        }
    }
}
#pragma warning restore CS0618
