// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace Klaviyo.Models
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    #pragma warning disable CS1591
    public partial class FlowDefinition : IAdditionalDataHolder, IParsable
    #pragma warning restore CS1591
    {
        /// <summary>A list of actions that make up the flow. Actions are linked to each other by their ids.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::Klaviyo.Models.FlowDefinition.FlowDefinition_actions>? Actions { get; set; }
#nullable restore
#else
        public List<global::Klaviyo.Models.FlowDefinition.FlowDefinition_actions> Actions { get; set; }
#endif
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>The ID of the action that is the entry point of the flow.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? EntryActionId { get; set; }
#nullable restore
#else
        public string EntryActionId { get; set; }
#endif
        /// <summary>Filters for users entering the flow. These filters are used on every action in the flow.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Klaviyo.Models.FlowDefinition_profile_filter? ProfileFilter { get; set; }
#nullable restore
#else
        public global::Klaviyo.Models.FlowDefinition_profile_filter ProfileFilter { get; set; }
#endif
        /// <summary>Corresponds to the object which triggers the flow. Only one trigger is supported.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::Klaviyo.Models.FlowDefinition.FlowDefinition_triggers>? Triggers { get; set; }
#nullable restore
#else
        public List<global::Klaviyo.Models.FlowDefinition.FlowDefinition_triggers> Triggers { get; set; }
#endif
        /// <summary>
        /// Instantiates a new <see cref="global::Klaviyo.Models.FlowDefinition"/> and sets the default values.
        /// </summary>
        public FlowDefinition()
        {
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::Klaviyo.Models.FlowDefinition"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::Klaviyo.Models.FlowDefinition CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::Klaviyo.Models.FlowDefinition();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "actions", n => { Actions = n.GetCollectionOfObjectValues<global::Klaviyo.Models.FlowDefinition.FlowDefinition_actions>(global::Klaviyo.Models.FlowDefinition.FlowDefinition_actions.CreateFromDiscriminatorValue)?.AsList(); } },
                { "entry_action_id", n => { EntryActionId = n.GetStringValue(); } },
                { "profile_filter", n => { ProfileFilter = n.GetObjectValue<global::Klaviyo.Models.FlowDefinition_profile_filter>(global::Klaviyo.Models.FlowDefinition_profile_filter.CreateFromDiscriminatorValue); } },
                { "triggers", n => { Triggers = n.GetCollectionOfObjectValues<global::Klaviyo.Models.FlowDefinition.FlowDefinition_triggers>(global::Klaviyo.Models.FlowDefinition.FlowDefinition_triggers.CreateFromDiscriminatorValue)?.AsList(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteCollectionOfObjectValues<global::Klaviyo.Models.FlowDefinition.FlowDefinition_actions>("actions", Actions);
            writer.WriteStringValue("entry_action_id", EntryActionId);
            writer.WriteObjectValue<global::Klaviyo.Models.FlowDefinition_profile_filter>("profile_filter", ProfileFilter);
            writer.WriteCollectionOfObjectValues<global::Klaviyo.Models.FlowDefinition.FlowDefinition_triggers>("triggers", Triggers);
            writer.WriteAdditionalData(AdditionalData);
        }
        /// <summary>
        /// Composed type wrapper for classes <see cref="global::Klaviyo.Models.AbTestAction"/>, <see cref="global::Klaviyo.Models.BackInStockDelayAction"/>, <see cref="global::Klaviyo.Models.BranchAction"/>, <see cref="global::Klaviyo.Models.CodeAction"/>, <see cref="global::Klaviyo.Models.ConditionalBranchAction"/>, <see cref="global::Klaviyo.Models.CountdownDelayAction"/>, <see cref="global::Klaviyo.Models.InternalServiceAction"/>, <see cref="global::Klaviyo.Models.ListUpdateAction"/>, <see cref="global::Klaviyo.Models.SendEmailAction"/>, <see cref="global::Klaviyo.Models.SendInternalAlertAction"/>, <see cref="global::Klaviyo.Models.SendPushNotificationAction"/>, <see cref="global::Klaviyo.Models.SendSmsAction"/>, <see cref="global::Klaviyo.Models.SendWebhookAction"/>, <see cref="global::Klaviyo.Models.SendWhatsAppAction"/>, <see cref="global::Klaviyo.Models.SplitAction"/>, <see cref="global::Klaviyo.Models.TargetDateAction"/>, <see cref="global::Klaviyo.Models.TimeDelayAction"/>, <see cref="global::Klaviyo.Models.TriggerBranchAction"/>, <see cref="global::Klaviyo.Models.UpdateProfileAction"/>
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
        public partial class FlowDefinition_actions : IComposedTypeWrapper, IParsable
        {
            /// <summary>Composed type representation for type <see cref="global::Klaviyo.Models.AbTestAction"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            public global::Klaviyo.Models.AbTestAction? AbTestAction { get; set; }
#nullable restore
#else
            public global::Klaviyo.Models.AbTestAction AbTestAction { get; set; }
#endif
            /// <summary>Composed type representation for type <see cref="global::Klaviyo.Models.BackInStockDelayAction"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            public global::Klaviyo.Models.BackInStockDelayAction? BackInStockDelayAction { get; set; }
#nullable restore
#else
            public global::Klaviyo.Models.BackInStockDelayAction BackInStockDelayAction { get; set; }
#endif
            /// <summary>Composed type representation for type <see cref="global::Klaviyo.Models.BranchAction"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            public global::Klaviyo.Models.BranchAction? BranchAction { get; set; }
#nullable restore
#else
            public global::Klaviyo.Models.BranchAction BranchAction { get; set; }
#endif
            /// <summary>Composed type representation for type <see cref="global::Klaviyo.Models.CodeAction"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            public global::Klaviyo.Models.CodeAction? CodeAction { get; set; }
#nullable restore
#else
            public global::Klaviyo.Models.CodeAction CodeAction { get; set; }
#endif
            /// <summary>Composed type representation for type <see cref="global::Klaviyo.Models.ConditionalBranchAction"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            public global::Klaviyo.Models.ConditionalBranchAction? ConditionalBranchAction { get; set; }
#nullable restore
#else
            public global::Klaviyo.Models.ConditionalBranchAction ConditionalBranchAction { get; set; }
#endif
            /// <summary>Composed type representation for type <see cref="global::Klaviyo.Models.CountdownDelayAction"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            public global::Klaviyo.Models.CountdownDelayAction? CountdownDelayAction { get; set; }
#nullable restore
#else
            public global::Klaviyo.Models.CountdownDelayAction CountdownDelayAction { get; set; }
#endif
            /// <summary>Composed type representation for type <see cref="global::Klaviyo.Models.InternalServiceAction"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            public global::Klaviyo.Models.InternalServiceAction? InternalServiceAction { get; set; }
#nullable restore
#else
            public global::Klaviyo.Models.InternalServiceAction InternalServiceAction { get; set; }
#endif
            /// <summary>Composed type representation for type <see cref="global::Klaviyo.Models.ListUpdateAction"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            public global::Klaviyo.Models.ListUpdateAction? ListUpdateAction { get; set; }
#nullable restore
#else
            public global::Klaviyo.Models.ListUpdateAction ListUpdateAction { get; set; }
#endif
            /// <summary>Composed type representation for type <see cref="global::Klaviyo.Models.SendEmailAction"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            public global::Klaviyo.Models.SendEmailAction? SendEmailAction { get; set; }
#nullable restore
#else
            public global::Klaviyo.Models.SendEmailAction SendEmailAction { get; set; }
#endif
            /// <summary>Composed type representation for type <see cref="global::Klaviyo.Models.SendInternalAlertAction"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            public global::Klaviyo.Models.SendInternalAlertAction? SendInternalAlertAction { get; set; }
#nullable restore
#else
            public global::Klaviyo.Models.SendInternalAlertAction SendInternalAlertAction { get; set; }
#endif
            /// <summary>Composed type representation for type <see cref="global::Klaviyo.Models.SendPushNotificationAction"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            public global::Klaviyo.Models.SendPushNotificationAction? SendPushNotificationAction { get; set; }
#nullable restore
#else
            public global::Klaviyo.Models.SendPushNotificationAction SendPushNotificationAction { get; set; }
#endif
            /// <summary>Composed type representation for type <see cref="global::Klaviyo.Models.SendSmsAction"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            public global::Klaviyo.Models.SendSmsAction? SendSmsAction { get; set; }
#nullable restore
#else
            public global::Klaviyo.Models.SendSmsAction SendSmsAction { get; set; }
#endif
            /// <summary>Composed type representation for type <see cref="global::Klaviyo.Models.SendWebhookAction"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            public global::Klaviyo.Models.SendWebhookAction? SendWebhookAction { get; set; }
#nullable restore
#else
            public global::Klaviyo.Models.SendWebhookAction SendWebhookAction { get; set; }
#endif
            /// <summary>Composed type representation for type <see cref="global::Klaviyo.Models.SendWhatsAppAction"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            public global::Klaviyo.Models.SendWhatsAppAction? SendWhatsAppAction { get; set; }
#nullable restore
#else
            public global::Klaviyo.Models.SendWhatsAppAction SendWhatsAppAction { get; set; }
#endif
            /// <summary>Composed type representation for type <see cref="global::Klaviyo.Models.SplitAction"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            public global::Klaviyo.Models.SplitAction? SplitAction { get; set; }
#nullable restore
#else
            public global::Klaviyo.Models.SplitAction SplitAction { get; set; }
#endif
            /// <summary>Composed type representation for type <see cref="global::Klaviyo.Models.TargetDateAction"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            public global::Klaviyo.Models.TargetDateAction? TargetDateAction { get; set; }
#nullable restore
#else
            public global::Klaviyo.Models.TargetDateAction TargetDateAction { get; set; }
#endif
            /// <summary>Composed type representation for type <see cref="global::Klaviyo.Models.TimeDelayAction"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            public global::Klaviyo.Models.TimeDelayAction? TimeDelayAction { get; set; }
#nullable restore
#else
            public global::Klaviyo.Models.TimeDelayAction TimeDelayAction { get; set; }
#endif
            /// <summary>Composed type representation for type <see cref="global::Klaviyo.Models.TriggerBranchAction"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            public global::Klaviyo.Models.TriggerBranchAction? TriggerBranchAction { get; set; }
#nullable restore
#else
            public global::Klaviyo.Models.TriggerBranchAction TriggerBranchAction { get; set; }
#endif
            /// <summary>Composed type representation for type <see cref="global::Klaviyo.Models.UpdateProfileAction"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            public global::Klaviyo.Models.UpdateProfileAction? UpdateProfileAction { get; set; }
#nullable restore
#else
            public global::Klaviyo.Models.UpdateProfileAction UpdateProfileAction { get; set; }
#endif
            /// <summary>
            /// Creates a new instance of the appropriate class based on discriminator value
            /// </summary>
            /// <returns>A <see cref="global::Klaviyo.Models.FlowDefinition.FlowDefinition_actions"/></returns>
            /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
            public static global::Klaviyo.Models.FlowDefinition.FlowDefinition_actions CreateFromDiscriminatorValue(IParseNode parseNode)
            {
                _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
                var mappingValue = parseNode.GetChildNode("")?.GetStringValue();
                var result = new global::Klaviyo.Models.FlowDefinition.FlowDefinition_actions();
                if("AbTestAction".Equals(mappingValue, StringComparison.OrdinalIgnoreCase))
                {
                    result.AbTestAction = new global::Klaviyo.Models.AbTestAction();
                }
                else if("BackInStockDelayAction".Equals(mappingValue, StringComparison.OrdinalIgnoreCase))
                {
                    result.BackInStockDelayAction = new global::Klaviyo.Models.BackInStockDelayAction();
                }
                else if("BranchAction".Equals(mappingValue, StringComparison.OrdinalIgnoreCase))
                {
                    result.BranchAction = new global::Klaviyo.Models.BranchAction();
                }
                else if("CodeAction".Equals(mappingValue, StringComparison.OrdinalIgnoreCase))
                {
                    result.CodeAction = new global::Klaviyo.Models.CodeAction();
                }
                else if("ConditionalBranchAction".Equals(mappingValue, StringComparison.OrdinalIgnoreCase))
                {
                    result.ConditionalBranchAction = new global::Klaviyo.Models.ConditionalBranchAction();
                }
                else if("CountdownDelayAction".Equals(mappingValue, StringComparison.OrdinalIgnoreCase))
                {
                    result.CountdownDelayAction = new global::Klaviyo.Models.CountdownDelayAction();
                }
                else if("InternalServiceAction".Equals(mappingValue, StringComparison.OrdinalIgnoreCase))
                {
                    result.InternalServiceAction = new global::Klaviyo.Models.InternalServiceAction();
                }
                else if("ListUpdateAction".Equals(mappingValue, StringComparison.OrdinalIgnoreCase))
                {
                    result.ListUpdateAction = new global::Klaviyo.Models.ListUpdateAction();
                }
                else if("SendEmailAction".Equals(mappingValue, StringComparison.OrdinalIgnoreCase))
                {
                    result.SendEmailAction = new global::Klaviyo.Models.SendEmailAction();
                }
                else if("SendInternalAlertAction".Equals(mappingValue, StringComparison.OrdinalIgnoreCase))
                {
                    result.SendInternalAlertAction = new global::Klaviyo.Models.SendInternalAlertAction();
                }
                else if("SendPushNotificationAction".Equals(mappingValue, StringComparison.OrdinalIgnoreCase))
                {
                    result.SendPushNotificationAction = new global::Klaviyo.Models.SendPushNotificationAction();
                }
                else if("SendSmsAction".Equals(mappingValue, StringComparison.OrdinalIgnoreCase))
                {
                    result.SendSmsAction = new global::Klaviyo.Models.SendSmsAction();
                }
                else if("SendWebhookAction".Equals(mappingValue, StringComparison.OrdinalIgnoreCase))
                {
                    result.SendWebhookAction = new global::Klaviyo.Models.SendWebhookAction();
                }
                else if("SendWhatsAppAction".Equals(mappingValue, StringComparison.OrdinalIgnoreCase))
                {
                    result.SendWhatsAppAction = new global::Klaviyo.Models.SendWhatsAppAction();
                }
                else if("SplitAction".Equals(mappingValue, StringComparison.OrdinalIgnoreCase))
                {
                    result.SplitAction = new global::Klaviyo.Models.SplitAction();
                }
                else if("TargetDateAction".Equals(mappingValue, StringComparison.OrdinalIgnoreCase))
                {
                    result.TargetDateAction = new global::Klaviyo.Models.TargetDateAction();
                }
                else if("TimeDelayAction".Equals(mappingValue, StringComparison.OrdinalIgnoreCase))
                {
                    result.TimeDelayAction = new global::Klaviyo.Models.TimeDelayAction();
                }
                else if("TriggerBranchAction".Equals(mappingValue, StringComparison.OrdinalIgnoreCase))
                {
                    result.TriggerBranchAction = new global::Klaviyo.Models.TriggerBranchAction();
                }
                else if("UpdateProfileAction".Equals(mappingValue, StringComparison.OrdinalIgnoreCase))
                {
                    result.UpdateProfileAction = new global::Klaviyo.Models.UpdateProfileAction();
                }
                return result;
            }
            /// <summary>
            /// The deserialization information for the current model
            /// </summary>
            /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
            public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
            {
                if(AbTestAction != null)
                {
                    return AbTestAction.GetFieldDeserializers();
                }
                else if(BackInStockDelayAction != null)
                {
                    return BackInStockDelayAction.GetFieldDeserializers();
                }
                else if(BranchAction != null)
                {
                    return BranchAction.GetFieldDeserializers();
                }
                else if(CodeAction != null)
                {
                    return CodeAction.GetFieldDeserializers();
                }
                else if(ConditionalBranchAction != null)
                {
                    return ConditionalBranchAction.GetFieldDeserializers();
                }
                else if(CountdownDelayAction != null)
                {
                    return CountdownDelayAction.GetFieldDeserializers();
                }
                else if(InternalServiceAction != null)
                {
                    return InternalServiceAction.GetFieldDeserializers();
                }
                else if(ListUpdateAction != null)
                {
                    return ListUpdateAction.GetFieldDeserializers();
                }
                else if(SendEmailAction != null)
                {
                    return SendEmailAction.GetFieldDeserializers();
                }
                else if(SendInternalAlertAction != null)
                {
                    return SendInternalAlertAction.GetFieldDeserializers();
                }
                else if(SendPushNotificationAction != null)
                {
                    return SendPushNotificationAction.GetFieldDeserializers();
                }
                else if(SendSmsAction != null)
                {
                    return SendSmsAction.GetFieldDeserializers();
                }
                else if(SendWebhookAction != null)
                {
                    return SendWebhookAction.GetFieldDeserializers();
                }
                else if(SendWhatsAppAction != null)
                {
                    return SendWhatsAppAction.GetFieldDeserializers();
                }
                else if(SplitAction != null)
                {
                    return SplitAction.GetFieldDeserializers();
                }
                else if(TargetDateAction != null)
                {
                    return TargetDateAction.GetFieldDeserializers();
                }
                else if(TimeDelayAction != null)
                {
                    return TimeDelayAction.GetFieldDeserializers();
                }
                else if(TriggerBranchAction != null)
                {
                    return TriggerBranchAction.GetFieldDeserializers();
                }
                else if(UpdateProfileAction != null)
                {
                    return UpdateProfileAction.GetFieldDeserializers();
                }
                return new Dictionary<string, Action<IParseNode>>();
            }
            /// <summary>
            /// Serializes information the current object
            /// </summary>
            /// <param name="writer">Serialization writer to use to serialize this model</param>
            public virtual void Serialize(ISerializationWriter writer)
            {
                _ = writer ?? throw new ArgumentNullException(nameof(writer));
                if(AbTestAction != null)
                {
                    writer.WriteObjectValue<global::Klaviyo.Models.AbTestAction>(null, AbTestAction);
                }
                else if(BackInStockDelayAction != null)
                {
                    writer.WriteObjectValue<global::Klaviyo.Models.BackInStockDelayAction>(null, BackInStockDelayAction);
                }
                else if(BranchAction != null)
                {
                    writer.WriteObjectValue<global::Klaviyo.Models.BranchAction>(null, BranchAction);
                }
                else if(CodeAction != null)
                {
                    writer.WriteObjectValue<global::Klaviyo.Models.CodeAction>(null, CodeAction);
                }
                else if(ConditionalBranchAction != null)
                {
                    writer.WriteObjectValue<global::Klaviyo.Models.ConditionalBranchAction>(null, ConditionalBranchAction);
                }
                else if(CountdownDelayAction != null)
                {
                    writer.WriteObjectValue<global::Klaviyo.Models.CountdownDelayAction>(null, CountdownDelayAction);
                }
                else if(InternalServiceAction != null)
                {
                    writer.WriteObjectValue<global::Klaviyo.Models.InternalServiceAction>(null, InternalServiceAction);
                }
                else if(ListUpdateAction != null)
                {
                    writer.WriteObjectValue<global::Klaviyo.Models.ListUpdateAction>(null, ListUpdateAction);
                }
                else if(SendEmailAction != null)
                {
                    writer.WriteObjectValue<global::Klaviyo.Models.SendEmailAction>(null, SendEmailAction);
                }
                else if(SendInternalAlertAction != null)
                {
                    writer.WriteObjectValue<global::Klaviyo.Models.SendInternalAlertAction>(null, SendInternalAlertAction);
                }
                else if(SendPushNotificationAction != null)
                {
                    writer.WriteObjectValue<global::Klaviyo.Models.SendPushNotificationAction>(null, SendPushNotificationAction);
                }
                else if(SendSmsAction != null)
                {
                    writer.WriteObjectValue<global::Klaviyo.Models.SendSmsAction>(null, SendSmsAction);
                }
                else if(SendWebhookAction != null)
                {
                    writer.WriteObjectValue<global::Klaviyo.Models.SendWebhookAction>(null, SendWebhookAction);
                }
                else if(SendWhatsAppAction != null)
                {
                    writer.WriteObjectValue<global::Klaviyo.Models.SendWhatsAppAction>(null, SendWhatsAppAction);
                }
                else if(SplitAction != null)
                {
                    writer.WriteObjectValue<global::Klaviyo.Models.SplitAction>(null, SplitAction);
                }
                else if(TargetDateAction != null)
                {
                    writer.WriteObjectValue<global::Klaviyo.Models.TargetDateAction>(null, TargetDateAction);
                }
                else if(TimeDelayAction != null)
                {
                    writer.WriteObjectValue<global::Klaviyo.Models.TimeDelayAction>(null, TimeDelayAction);
                }
                else if(TriggerBranchAction != null)
                {
                    writer.WriteObjectValue<global::Klaviyo.Models.TriggerBranchAction>(null, TriggerBranchAction);
                }
                else if(UpdateProfileAction != null)
                {
                    writer.WriteObjectValue<global::Klaviyo.Models.UpdateProfileAction>(null, UpdateProfileAction);
                }
            }
        }
        /// <summary>
        /// Composed type wrapper for classes <see cref="global::Klaviyo.Models.CustomObjectDateTrigger"/>, <see cref="global::Klaviyo.Models.ListTrigger"/>, <see cref="global::Klaviyo.Models.LowInventoryTrigger"/>, <see cref="global::Klaviyo.Models.MetricTrigger"/>, <see cref="global::Klaviyo.Models.PriceDropTrigger"/>, <see cref="global::Klaviyo.Models.ProfilePropertyDateTrigger"/>, <see cref="global::Klaviyo.Models.ScheduledTrigger"/>, <see cref="global::Klaviyo.Models.SegmentTrigger"/>
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
        public partial class FlowDefinition_triggers : IComposedTypeWrapper, IParsable
        {
            /// <summary>Composed type representation for type <see cref="global::Klaviyo.Models.CustomObjectDateTrigger"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            public global::Klaviyo.Models.CustomObjectDateTrigger? CustomObjectDateTrigger { get; set; }
#nullable restore
#else
            public global::Klaviyo.Models.CustomObjectDateTrigger CustomObjectDateTrigger { get; set; }
#endif
            /// <summary>Composed type representation for type <see cref="global::Klaviyo.Models.ListTrigger"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            public global::Klaviyo.Models.ListTrigger? ListTrigger { get; set; }
#nullable restore
#else
            public global::Klaviyo.Models.ListTrigger ListTrigger { get; set; }
#endif
            /// <summary>Composed type representation for type <see cref="global::Klaviyo.Models.LowInventoryTrigger"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            public global::Klaviyo.Models.LowInventoryTrigger? LowInventoryTrigger { get; set; }
#nullable restore
#else
            public global::Klaviyo.Models.LowInventoryTrigger LowInventoryTrigger { get; set; }
#endif
            /// <summary>Composed type representation for type <see cref="global::Klaviyo.Models.MetricTrigger"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            public global::Klaviyo.Models.MetricTrigger? MetricTrigger { get; set; }
#nullable restore
#else
            public global::Klaviyo.Models.MetricTrigger MetricTrigger { get; set; }
#endif
            /// <summary>Composed type representation for type <see cref="global::Klaviyo.Models.PriceDropTrigger"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            public global::Klaviyo.Models.PriceDropTrigger? PriceDropTrigger { get; set; }
#nullable restore
#else
            public global::Klaviyo.Models.PriceDropTrigger PriceDropTrigger { get; set; }
#endif
            /// <summary>Composed type representation for type <see cref="global::Klaviyo.Models.ProfilePropertyDateTrigger"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            public global::Klaviyo.Models.ProfilePropertyDateTrigger? ProfilePropertyDateTrigger { get; set; }
#nullable restore
#else
            public global::Klaviyo.Models.ProfilePropertyDateTrigger ProfilePropertyDateTrigger { get; set; }
#endif
            /// <summary>Composed type representation for type <see cref="global::Klaviyo.Models.ScheduledTrigger"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            public global::Klaviyo.Models.ScheduledTrigger? ScheduledTrigger { get; set; }
#nullable restore
#else
            public global::Klaviyo.Models.ScheduledTrigger ScheduledTrigger { get; set; }
#endif
            /// <summary>Composed type representation for type <see cref="global::Klaviyo.Models.SegmentTrigger"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            public global::Klaviyo.Models.SegmentTrigger? SegmentTrigger { get; set; }
#nullable restore
#else
            public global::Klaviyo.Models.SegmentTrigger SegmentTrigger { get; set; }
#endif
            /// <summary>
            /// Creates a new instance of the appropriate class based on discriminator value
            /// </summary>
            /// <returns>A <see cref="global::Klaviyo.Models.FlowDefinition.FlowDefinition_triggers"/></returns>
            /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
            public static global::Klaviyo.Models.FlowDefinition.FlowDefinition_triggers CreateFromDiscriminatorValue(IParseNode parseNode)
            {
                _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
                var mappingValue = parseNode.GetChildNode("")?.GetStringValue();
                var result = new global::Klaviyo.Models.FlowDefinition.FlowDefinition_triggers();
                if("CustomObjectDateTrigger".Equals(mappingValue, StringComparison.OrdinalIgnoreCase))
                {
                    result.CustomObjectDateTrigger = new global::Klaviyo.Models.CustomObjectDateTrigger();
                }
                else if("ListTrigger".Equals(mappingValue, StringComparison.OrdinalIgnoreCase))
                {
                    result.ListTrigger = new global::Klaviyo.Models.ListTrigger();
                }
                else if("LowInventoryTrigger".Equals(mappingValue, StringComparison.OrdinalIgnoreCase))
                {
                    result.LowInventoryTrigger = new global::Klaviyo.Models.LowInventoryTrigger();
                }
                else if("MetricTrigger".Equals(mappingValue, StringComparison.OrdinalIgnoreCase))
                {
                    result.MetricTrigger = new global::Klaviyo.Models.MetricTrigger();
                }
                else if("PriceDropTrigger".Equals(mappingValue, StringComparison.OrdinalIgnoreCase))
                {
                    result.PriceDropTrigger = new global::Klaviyo.Models.PriceDropTrigger();
                }
                else if("ProfilePropertyDateTrigger".Equals(mappingValue, StringComparison.OrdinalIgnoreCase))
                {
                    result.ProfilePropertyDateTrigger = new global::Klaviyo.Models.ProfilePropertyDateTrigger();
                }
                else if("ScheduledTrigger".Equals(mappingValue, StringComparison.OrdinalIgnoreCase))
                {
                    result.ScheduledTrigger = new global::Klaviyo.Models.ScheduledTrigger();
                }
                else if("SegmentTrigger".Equals(mappingValue, StringComparison.OrdinalIgnoreCase))
                {
                    result.SegmentTrigger = new global::Klaviyo.Models.SegmentTrigger();
                }
                return result;
            }
            /// <summary>
            /// The deserialization information for the current model
            /// </summary>
            /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
            public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
            {
                if(CustomObjectDateTrigger != null)
                {
                    return CustomObjectDateTrigger.GetFieldDeserializers();
                }
                else if(ListTrigger != null)
                {
                    return ListTrigger.GetFieldDeserializers();
                }
                else if(LowInventoryTrigger != null)
                {
                    return LowInventoryTrigger.GetFieldDeserializers();
                }
                else if(MetricTrigger != null)
                {
                    return MetricTrigger.GetFieldDeserializers();
                }
                else if(PriceDropTrigger != null)
                {
                    return PriceDropTrigger.GetFieldDeserializers();
                }
                else if(ProfilePropertyDateTrigger != null)
                {
                    return ProfilePropertyDateTrigger.GetFieldDeserializers();
                }
                else if(ScheduledTrigger != null)
                {
                    return ScheduledTrigger.GetFieldDeserializers();
                }
                else if(SegmentTrigger != null)
                {
                    return SegmentTrigger.GetFieldDeserializers();
                }
                return new Dictionary<string, Action<IParseNode>>();
            }
            /// <summary>
            /// Serializes information the current object
            /// </summary>
            /// <param name="writer">Serialization writer to use to serialize this model</param>
            public virtual void Serialize(ISerializationWriter writer)
            {
                _ = writer ?? throw new ArgumentNullException(nameof(writer));
                if(CustomObjectDateTrigger != null)
                {
                    writer.WriteObjectValue<global::Klaviyo.Models.CustomObjectDateTrigger>(null, CustomObjectDateTrigger);
                }
                else if(ListTrigger != null)
                {
                    writer.WriteObjectValue<global::Klaviyo.Models.ListTrigger>(null, ListTrigger);
                }
                else if(LowInventoryTrigger != null)
                {
                    writer.WriteObjectValue<global::Klaviyo.Models.LowInventoryTrigger>(null, LowInventoryTrigger);
                }
                else if(MetricTrigger != null)
                {
                    writer.WriteObjectValue<global::Klaviyo.Models.MetricTrigger>(null, MetricTrigger);
                }
                else if(PriceDropTrigger != null)
                {
                    writer.WriteObjectValue<global::Klaviyo.Models.PriceDropTrigger>(null, PriceDropTrigger);
                }
                else if(ProfilePropertyDateTrigger != null)
                {
                    writer.WriteObjectValue<global::Klaviyo.Models.ProfilePropertyDateTrigger>(null, ProfilePropertyDateTrigger);
                }
                else if(ScheduledTrigger != null)
                {
                    writer.WriteObjectValue<global::Klaviyo.Models.ScheduledTrigger>(null, ScheduledTrigger);
                }
                else if(SegmentTrigger != null)
                {
                    writer.WriteObjectValue<global::Klaviyo.Models.SegmentTrigger>(null, SegmentTrigger);
                }
            }
        }
    }
}
#pragma warning restore CS0618
