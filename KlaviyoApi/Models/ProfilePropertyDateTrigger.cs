// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using Microsoft.Kiota.Abstractions;
using System.Collections.Generic;
using System.IO;
using System;
namespace Klaviyo.Models
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    #pragma warning disable CS1591
    public partial class ProfilePropertyDateTrigger : IAdditionalDataHolder, IParsable
    #pragma warning restore CS1591
    {
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>The date_field_type property</summary>
        public global::Klaviyo.Models.ProfilePropertyEnum? DateFieldType { get; set; }
        /// <summary>The date_profile_property property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? DateProfileProperty { get; set; }
#nullable restore
#else
        public string DateProfileProperty { get; set; }
#endif
        /// <summary>The internal_metric_id property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? InternalMetricId { get; set; }
#nullable restore
#else
        public string InternalMetricId { get; set; }
#endif
        /// <summary>aka RepeatTypes in app and RepeatType in fender.</summary>
        public global::Klaviyo.Models.ProfilePropertyDateTrigger_recurrence_frequency? RecurrenceFrequency { get; set; }
        /// <summary>See FlowDateTrigger.UNIT_CHOICES in app and CountdownUnit in fender.</summary>
        public global::Klaviyo.Models.ProfilePropertyDateTrigger_timedelta_unit_before_date? TimedeltaUnitBeforeDate { get; set; }
        /// <summary>The timedelta_value_before_date property</summary>
        public int? TimedeltaValueBeforeDate { get; set; }
        /// <summary>The timezone property</summary>
        public global::Klaviyo.Models.ProfilePropertyDateTrigger_timezone? Timezone { get; set; }
        /// <summary>The trigger_days property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::Klaviyo.Models.ProfilePropertyDateTrigger_trigger_days?>? TriggerDays { get; set; }
#nullable restore
#else
        public List<global::Klaviyo.Models.ProfilePropertyDateTrigger_trigger_days?> TriggerDays { get; set; }
#endif
        /// <summary>The trigger_time property</summary>
        public Time? TriggerTime { get; set; }
        /// <summary>The type property</summary>
        public global::Klaviyo.Models.DateEnum? Type { get; set; }
        /// <summary>
        /// Instantiates a new <see cref="global::Klaviyo.Models.ProfilePropertyDateTrigger"/> and sets the default values.
        /// </summary>
        public ProfilePropertyDateTrigger()
        {
            AdditionalData = new Dictionary<string, object>();
            RecurrenceFrequency = global::Klaviyo.Models.ProfilePropertyDateTrigger_recurrence_frequency.Monthly;
            TimedeltaUnitBeforeDate = global::Klaviyo.Models.ProfilePropertyDateTrigger_timedelta_unit_before_date.Weeks;
            Timezone = global::Klaviyo.Models.ProfilePropertyDateTrigger_timezone.Profile;
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::Klaviyo.Models.ProfilePropertyDateTrigger"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::Klaviyo.Models.ProfilePropertyDateTrigger CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::Klaviyo.Models.ProfilePropertyDateTrigger();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "date_field_type", n => { DateFieldType = n.GetEnumValue<global::Klaviyo.Models.ProfilePropertyEnum>(); } },
                { "date_profile_property", n => { DateProfileProperty = n.GetStringValue(); } },
                { "internal_metric_id", n => { InternalMetricId = n.GetStringValue(); } },
                { "recurrence_frequency", n => { RecurrenceFrequency = n.GetEnumValue<global::Klaviyo.Models.ProfilePropertyDateTrigger_recurrence_frequency>(); } },
                { "timedelta_unit_before_date", n => { TimedeltaUnitBeforeDate = n.GetEnumValue<global::Klaviyo.Models.ProfilePropertyDateTrigger_timedelta_unit_before_date>(); } },
                { "timedelta_value_before_date", n => { TimedeltaValueBeforeDate = n.GetIntValue(); } },
                { "timezone", n => { Timezone = n.GetEnumValue<global::Klaviyo.Models.ProfilePropertyDateTrigger_timezone>(); } },
                { "trigger_days", n => { TriggerDays = n.GetCollectionOfEnumValues<global::Klaviyo.Models.ProfilePropertyDateTrigger_trigger_days>()?.AsList(); } },
                { "trigger_time", n => { TriggerTime = n.GetTimeValue(); } },
                { "type", n => { Type = n.GetEnumValue<global::Klaviyo.Models.DateEnum>(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteEnumValue<global::Klaviyo.Models.ProfilePropertyEnum>("date_field_type", DateFieldType);
            writer.WriteStringValue("date_profile_property", DateProfileProperty);
            writer.WriteStringValue("internal_metric_id", InternalMetricId);
            writer.WriteEnumValue<global::Klaviyo.Models.ProfilePropertyDateTrigger_recurrence_frequency>("recurrence_frequency", RecurrenceFrequency);
            writer.WriteEnumValue<global::Klaviyo.Models.ProfilePropertyDateTrigger_timedelta_unit_before_date>("timedelta_unit_before_date", TimedeltaUnitBeforeDate);
            writer.WriteIntValue("timedelta_value_before_date", TimedeltaValueBeforeDate);
            writer.WriteEnumValue<global::Klaviyo.Models.ProfilePropertyDateTrigger_timezone>("timezone", Timezone);
            writer.WriteCollectionOfEnumValues<global::Klaviyo.Models.ProfilePropertyDateTrigger_trigger_days>("trigger_days", TriggerDays);
            writer.WriteTimeValue("trigger_time", TriggerTime);
            writer.WriteEnumValue<global::Klaviyo.Models.DateEnum>("type", Type);
            writer.WriteAdditionalData(AdditionalData);
        }
    }
}
#pragma warning restore CS0618
