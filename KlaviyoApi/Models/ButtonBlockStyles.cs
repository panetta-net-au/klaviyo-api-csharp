// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace Klaviyo.Models
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    #pragma warning disable CS1591
    public partial class ButtonBlockStyles : IAdditionalDataHolder, IParsable
    #pragma warning restore CS1591
    {
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>The background_color property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? BackgroundColor { get; set; }
#nullable restore
#else
        public string BackgroundColor { get; set; }
#endif
        /// <summary>The block_background_color property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? BlockBackgroundColor { get; set; }
#nullable restore
#else
        public string BlockBackgroundColor { get; set; }
#endif
        /// <summary>The block_border_color property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? BlockBorderColor { get; set; }
#nullable restore
#else
        public string BlockBorderColor { get; set; }
#endif
        /// <summary>Border style.</summary>
        public global::Klaviyo.Models.ButtonBlockStyles_block_border_style? BlockBorderStyle { get; set; }
        /// <summary>The block_border_width property</summary>
        public int? BlockBorderWidth { get; set; }
        /// <summary>The block_padding_bottom property</summary>
        public int? BlockPaddingBottom { get; set; }
        /// <summary>The block_padding_left property</summary>
        public int? BlockPaddingLeft { get; set; }
        /// <summary>The block_padding_right property</summary>
        public int? BlockPaddingRight { get; set; }
        /// <summary>The block_padding_top property</summary>
        public int? BlockPaddingTop { get; set; }
        /// <summary>The border_radius property</summary>
        public int? BorderRadius { get; set; }
        /// <summary>The color property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Color { get; set; }
#nullable restore
#else
        public string Color { get; set; }
#endif
        /// <summary>The drop_shadow_color property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? DropShadowColor { get; set; }
#nullable restore
#else
        public string DropShadowColor { get; set; }
#endif
        /// <summary>The font_family property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? FontFamily { get; set; }
#nullable restore
#else
        public string FontFamily { get; set; }
#endif
        /// <summary>The font_size property</summary>
        public int? FontSize { get; set; }
        /// <summary>Font style.</summary>
        public global::Klaviyo.Models.ButtonBlockStyles_font_style? FontStyle { get; set; }
        /// <summary>The font_weight property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? FontWeight { get; set; }
#nullable restore
#else
        public string FontWeight { get; set; }
#endif
        /// <summary>The inner_padding_bottom property</summary>
        public int? InnerPaddingBottom { get; set; }
        /// <summary>The inner_padding_left property</summary>
        public int? InnerPaddingLeft { get; set; }
        /// <summary>The inner_padding_right property</summary>
        public int? InnerPaddingRight { get; set; }
        /// <summary>The inner_padding_top property</summary>
        public int? InnerPaddingTop { get; set; }
        /// <summary>The letter_spacing property</summary>
        public int? LetterSpacing { get; set; }
        /// <summary>The mobile_stretch_content property</summary>
        public bool? MobileStretchContent { get; set; }
        /// <summary>The stretch property</summary>
        public bool? Stretch { get; set; }
        /// <summary>Text Alignment.</summary>
        public global::Klaviyo.Models.ButtonBlockStyles_text_align? TextAlign { get; set; }
        /// <summary>The text_decoration property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? TextDecoration { get; set; }
#nullable restore
#else
        public string TextDecoration { get; set; }
#endif
        /// <summary>
        /// Instantiates a new <see cref="global::Klaviyo.Models.ButtonBlockStyles"/> and sets the default values.
        /// </summary>
        public ButtonBlockStyles()
        {
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::Klaviyo.Models.ButtonBlockStyles"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::Klaviyo.Models.ButtonBlockStyles CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::Klaviyo.Models.ButtonBlockStyles();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "background_color", n => { BackgroundColor = n.GetStringValue(); } },
                { "block_background_color", n => { BlockBackgroundColor = n.GetStringValue(); } },
                { "block_border_color", n => { BlockBorderColor = n.GetStringValue(); } },
                { "block_border_style", n => { BlockBorderStyle = n.GetEnumValue<global::Klaviyo.Models.ButtonBlockStyles_block_border_style>(); } },
                { "block_border_width", n => { BlockBorderWidth = n.GetIntValue(); } },
                { "block_padding_bottom", n => { BlockPaddingBottom = n.GetIntValue(); } },
                { "block_padding_left", n => { BlockPaddingLeft = n.GetIntValue(); } },
                { "block_padding_right", n => { BlockPaddingRight = n.GetIntValue(); } },
                { "block_padding_top", n => { BlockPaddingTop = n.GetIntValue(); } },
                { "border_radius", n => { BorderRadius = n.GetIntValue(); } },
                { "color", n => { Color = n.GetStringValue(); } },
                { "drop_shadow_color", n => { DropShadowColor = n.GetStringValue(); } },
                { "font_family", n => { FontFamily = n.GetStringValue(); } },
                { "font_size", n => { FontSize = n.GetIntValue(); } },
                { "font_style", n => { FontStyle = n.GetEnumValue<global::Klaviyo.Models.ButtonBlockStyles_font_style>(); } },
                { "font_weight", n => { FontWeight = n.GetStringValue(); } },
                { "inner_padding_bottom", n => { InnerPaddingBottom = n.GetIntValue(); } },
                { "inner_padding_left", n => { InnerPaddingLeft = n.GetIntValue(); } },
                { "inner_padding_right", n => { InnerPaddingRight = n.GetIntValue(); } },
                { "inner_padding_top", n => { InnerPaddingTop = n.GetIntValue(); } },
                { "letter_spacing", n => { LetterSpacing = n.GetIntValue(); } },
                { "mobile_stretch_content", n => { MobileStretchContent = n.GetBoolValue(); } },
                { "stretch", n => { Stretch = n.GetBoolValue(); } },
                { "text_align", n => { TextAlign = n.GetEnumValue<global::Klaviyo.Models.ButtonBlockStyles_text_align>(); } },
                { "text_decoration", n => { TextDecoration = n.GetStringValue(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteStringValue("background_color", BackgroundColor);
            writer.WriteStringValue("block_background_color", BlockBackgroundColor);
            writer.WriteStringValue("block_border_color", BlockBorderColor);
            writer.WriteEnumValue<global::Klaviyo.Models.ButtonBlockStyles_block_border_style>("block_border_style", BlockBorderStyle);
            writer.WriteIntValue("block_border_width", BlockBorderWidth);
            writer.WriteIntValue("block_padding_bottom", BlockPaddingBottom);
            writer.WriteIntValue("block_padding_left", BlockPaddingLeft);
            writer.WriteIntValue("block_padding_right", BlockPaddingRight);
            writer.WriteIntValue("block_padding_top", BlockPaddingTop);
            writer.WriteIntValue("border_radius", BorderRadius);
            writer.WriteStringValue("color", Color);
            writer.WriteStringValue("drop_shadow_color", DropShadowColor);
            writer.WriteStringValue("font_family", FontFamily);
            writer.WriteIntValue("font_size", FontSize);
            writer.WriteEnumValue<global::Klaviyo.Models.ButtonBlockStyles_font_style>("font_style", FontStyle);
            writer.WriteStringValue("font_weight", FontWeight);
            writer.WriteIntValue("inner_padding_bottom", InnerPaddingBottom);
            writer.WriteIntValue("inner_padding_left", InnerPaddingLeft);
            writer.WriteIntValue("inner_padding_right", InnerPaddingRight);
            writer.WriteIntValue("inner_padding_top", InnerPaddingTop);
            writer.WriteIntValue("letter_spacing", LetterSpacing);
            writer.WriteBoolValue("mobile_stretch_content", MobileStretchContent);
            writer.WriteBoolValue("stretch", Stretch);
            writer.WriteEnumValue<global::Klaviyo.Models.ButtonBlockStyles_text_align>("text_align", TextAlign);
            writer.WriteStringValue("text_decoration", TextDecoration);
            writer.WriteAdditionalData(AdditionalData);
        }
    }
}
#pragma warning restore CS0618
